{"version":3,"sources":["jquery.preload.min.js","jquery.spritely.js","socket.io-1.3.5.js","surf.js"],"names":[],"mappings":"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","file":"surf.js","sourcesContent":["/**\n * jQuery.Preload\n * https://github.com/htmlhero/jQuery.preload\n *\n * Created by Andrew Motoshin\n * http://htmlhero.ru\n *\n * Version: 1.5.0\n * Requires: jQuery 1.6+\n *\n */\n\n!function(a){a.preload=function(){var b=[],c=function(a){for(var c=0;c<b.length;c++)if(b[c].src===a.src)return b[c];return b.push(a),a},d=function(a,b,c){\"function\"==typeof b&&b.call(a,c)};return function(b,e,f){if(\"undefined\"!=typeof b){\"string\"==typeof b&&(b=[b]),2===arguments.length&&\"function\"==typeof e&&(f=e,e=0);var g,h=b.length;if(e>0&&h>e&&(g=b.slice(e,h),b=b.slice(0,e),h=b.length),!h)return d(b,f,!0),void 0;for(var i,j=arguments.callee,k=0,l=function(){k++,k===h&&(d(b,f,!g),j(g,e,f))},m=0;m<b.length;m++)i=new Image,i.src=b[m],i=c(i),i.complete?l():a(i).on(\"load error\",l)}}}();var b=function(b,c){var d,e,f,g,h,i=[],j=new RegExp(\"url\\\\(['\\\"]?([^\\\"')]*)['\\\"]?\\\\)\",\"i\");return c.recursive&&(b=b.find(\"*\").add(b)),b.each(function(){for(d=a(this),e=d.css(\"background-image\")+\",\"+d.css(\"border-image-source\"),e=e.split(\",\"),h=0;h<e.length;h++)f=e[h],-1===f.indexOf(\"about:blank\")&&-1===f.indexOf(\"data:image\")&&(g=j.exec(f),g&&i.push(g[1]));\"IMG\"===this.nodeName&&i.push(this.src)}),i};a.fn.preload=function(){var c,d;1===arguments.length?\"object\"==typeof arguments[0]?c=arguments[0]:d=arguments[0]:arguments.length>1&&(c=arguments[0],d=arguments[1]),c=a.extend({recursive:!0,part:0},c);var e=this,f=b(e,c);return a.preload(f,c.part,function(a){a&&\"function\"==typeof d&&d.call(e.get())}),this}}(jQuery);","/*\n * jQuery spritely 0.6.7\n * http://spritely.net/\n *\n * Documentation:\n * http://spritely.net/documentation/\n *\n * Copyright 2010-2011, Peter Chater, Artlogic Media Ltd, http://www.artlogic.net/\n * Dual licensed under the MIT or GPL Version 2 licenses.\n *\n */\n\n(function($) {\n    $._spritely = {\n        // shared methods and variables used by spritely plugin\n        instances: {},\n        animate: function(options) {\n            var el = $(options.el);\n            var el_id = el.attr('id');\n            if (!$._spritely.instances[el_id]) {\n                return this;\n            }\n            options = $.extend(options, $._spritely.instances[el_id] || {});\n            if (options.type == 'sprite' && options.fps) {\n                if (options.play_frames && !$._spritely.instances[el_id]['remaining_frames']) {\n                    $._spritely.instances[el_id]['remaining_frames'] = options.play_frames + 1;\n                } else if (options.do_once && !$._spritely.instances[el_id]['remaining_frames']) {\n                    $._spritely.instances[el_id]['remaining_frames'] = options.no_of_frames;\n                }\n                var frames;\n                var animate = function(el) {\n                    var w = options.width, h = options.height;\n                    if (!frames) {\n                        frames = [];\n                        total = 0\n                        for (var i = 0; i < options.no_of_frames; i ++) {\n                            frames[frames.length] = (0 - total);\n                            total += w;\n                        }\n                    }\n                    if ($._spritely.instances[el_id]['current_frame'] == 0) {\n                        if (options.on_first_frame) {\n                            options.on_first_frame(el);\n                        }\n                    } else if ($._spritely.instances[el_id]['current_frame'] == frames.length - 1) {\n                        if (options.on_last_frame) {\n                            options.on_last_frame(el);\n                        }\n                    }\n                    if (options.on_frame && options.on_frame[$._spritely.instances[el_id]['current_frame']]) {\n                        options.on_frame[$._spritely.instances[el_id]['current_frame']](el);\n                    }\n                    if (options.rewind == true) {\n                        if ($._spritely.instances[el_id]['current_frame'] <= 0) {\n                            $._spritely.instances[el_id]['current_frame'] = frames.length - 1;\n                        } else {\n                            $._spritely.instances[el_id]['current_frame'] = $._spritely.instances[el_id]['current_frame'] - 1;\n                        };\n                    } else {\n                        if ($._spritely.instances[el_id]['current_frame'] >= frames.length - 1) {\n                            $._spritely.instances[el_id]['current_frame'] = 0;\n                        } else {\n                            $._spritely.instances[el_id]['current_frame'] = $._spritely.instances[el_id]['current_frame'] + 1;\n                        }\n                    }\n\n                    var yPos = $._spritely.getBgY(el);\n                    el.css('background-position', frames[$._spritely.instances[el_id]['current_frame']] + 'px ' + yPos);\n                    if (options.bounce && options.bounce[0] > 0 && options.bounce[1] > 0) {\n                        var ud = options.bounce[0]; // up-down\n                        var lr = options.bounce[1]; // left-right\n                        var ms = options.bounce[2]; // milliseconds\n                        el\n                            .animate({top: '+=' + ud + 'px', left: '-=' + lr + 'px'}, ms)\n                            .animate({top: '-=' + ud + 'px', left: '+=' + lr + 'px'}, ms);\n                    }\n                }\n                if ($._spritely.instances[el_id]['remaining_frames'] && $._spritely.instances[el_id]['remaining_frames'] > 0) {\n                    $._spritely.instances[el_id]['remaining_frames'] --;\n                    if ($._spritely.instances[el_id]['remaining_frames'] == 0) {\n                        $._spritely.instances[el_id]['remaining_frames'] = -1;\n                        delete $._spritely.instances[el_id]['remaining_frames'];\n                        return this;\n                    } else {\n                        animate(el);\n                    }\n                } else if ($._spritely.instances[el_id]['remaining_frames'] != -1) {\n                    animate(el);\n                }\n            } else if (options.type == 'pan') {\n                if (!$._spritely.instances[el_id]['_stopped']) {\n\n                    // As we pan, reduce the offset to the smallest possible\n                    // value to ease the load on the browser. This step is\n                    // skipped if the image hasn't loaded yet.\n                    var speed = options.speed || 1,\n                        start_x = $._spritely.instances[el_id]['l'] || parseInt($._spritely.getBgX(el).replace('px', ''), 10) || 0,\n                        start_y = $._spritely.instances[el_id]['t'] || parseInt($._spritely.getBgY(el).replace('px', ''), 10) || 0;\n\n                    if (options.do_once && !$._spritely.instances[el_id].remaining_frames || $._spritely.instances[el_id].remaining_frames <= 0) {\n                        switch(options.dir) {\n                            case 'up':\n                            case 'down':\n                                $._spritely.instances[el_id].remaining_frames = Math.floor((options.img_height || 0) / speed);\n                                break;\n                            case 'left':\n                            case 'right':\n                                $._spritely.instances[el_id].remaining_frames = Math.floor((options.img_width || 0) / speed);\n                                break;\n                        }\n                        $._spritely.instances[el_id].remaining_frames++;\n                    } else if (options.do_once) {\n                        $._spritely.instances[el_id].remaining_frames--;\n                    }\n\n                    switch (options.dir) {\n\n                        case 'up':\n                            speed *= -1;\n                        case 'down':\n                            if (!$._spritely.instances[el_id]['l'])\n                                $._spritely.instances[el_id]['l'] = start_x;\n                            $._spritely.instances[el_id]['t'] = start_y + speed;\n                            if (options.img_height)\n                                $._spritely.instances[el_id]['t'] %= options.img_height;\n                            break;\n\n                        case 'left':\n                            speed *= -1;\n                        case 'right':\n                            if (!$._spritely.instances[el_id]['t'])\n                                $._spritely.instances[el_id]['t'] = start_y;\n                            $._spritely.instances[el_id]['l'] = start_x + speed;\n                            if (options.img_width)\n                                $._spritely.instances[el_id]['l'] %= options.img_width;\n                            break;\n\n                    }\n\n                    // When assembling the background-position string, care must be taken\n                    // to ensure correct formatting.\n                    var bg_left = $._spritely.instances[el_id]['l'].toString();\n                    if (bg_left.indexOf('%') == -1) {\n                        bg_left += 'px ';\n                    } else {\n                        bg_left += ' ';\n                    }\n\n                    var bg_top = $._spritely.instances[el_id]['t'].toString();\n                    if (bg_top.indexOf('%') == -1) {\n                        bg_top += 'px ';\n                    } else {\n                        bg_top += ' ';\n                    }\n\n                    $(el).css('background-position', bg_left + bg_top);\n\n                    if (options.do_once && !$._spritely.instances[el_id].remaining_frames) {\n                        return this;\n                    }\n                }\n            }\n            $._spritely.instances[el_id]['options'] = options;\n            $._spritely.instances[el_id]['timeout'] = window.setTimeout(function() {\n                $._spritely.animate(options);\n            }, parseInt(1000 / options.fps));\n        },\n        randomIntBetween: function(lower, higher) {\n            return parseInt(rand_no = Math.floor((higher - (lower - 1)) * Math.random()) + lower);\n        },\n        getBgUseXY: (function() {\n            try {\n                return typeof $('body').css('background-position-x') == 'string';\n            } catch(e) {\n                return false;\n            }\n        })(),\n        getBgY: function(el) {\n            if ($._spritely.getBgUseXY) {\n                return $(el).css('background-position-y') || '0';\n            } else {\n                return ($(el).css('background-position') || ' ').split(' ')[1];\n            }\n        },\n        getBgX: function(el) {\n            if ($._spritely.getBgUseXY) {\n                return $(el).css('background-position-x') || '0';\n            } else {\n                return ($(el).css('background-position') || ' ').split(' ')[0];\n            }\n        },\n        get_rel_pos: function(pos, w) {\n            // return the position of an item relative to a background\n            // image of width given by w\n            var r = pos;\n            if (pos < 0) {\n                while (r < 0) {\n                    r += w;\n                }\n            } else {\n                while (r > w) {\n                    r -= w;\n                }\n            }\n            return r;\n        },\n\n        _spStrip: function(s, chars) {\n            // Strip any character in 'chars' from the beginning or end of\n            // 'str'. Like Python's .strip() method, or jQuery's $.trim()\n            // function (but allowing you to specify the characters).\n            while (s.length) {\n                var i, sr, nos = false, noe = false;\n                for (i=0;i<chars.length;i++) {\n                    var ss = s.slice(0, 1);\n                    sr = s.slice(1);\n                    if (chars.indexOf(ss) > -1)\n                        s = sr;\n                    else\n                        nos = true;\n                }\n                for (i=0;i<chars.length;i++) {\n                    var se = s.slice(-1);\n                    sr = s.slice(0, -1);\n                    if (chars.indexOf(se) > -1)\n                        s = sr;\n                    else\n                        noe = true;\n                }\n                if (nos && noe)\n                    return s;\n            }\n            return '';\n        }\n    };\n    $.fn.extend({\n\n        spritely: function(options) {\n\n            var $this = $(this),\n                el_id = $this.attr('id'),\n                \n                options = $.extend({\n                    type: 'sprite',\n                    do_once: false,\n                    width: null,\n                    height: null,\n                    img_width: 0,\n                    img_height: 0,\n                    fps: 12,\n                    no_of_frames: 2,\n                    play_frames: 0\n                }, options || {}),\n\n                background_image = (new Image()),\n                background_image_src = $._spritely._spStrip($this.css('background-image') || '', 'url(\"); ');\n\n                if (!$._spritely.instances[el_id]) {\n                    if (options.start_at_frame) {\n                        $._spritely.instances[el_id] = {current_frame: options.start_at_frame - 1};\n                    } else {\n                        $._spritely.instances[el_id] = {current_frame: -1};\n                    }\n                }\n\n                $._spritely.instances[el_id]['type'] = options.type;\n                $._spritely.instances[el_id]['depth'] = options.depth;\n\n                options.el = $this;\n                options.width = options.width || $this.width() || 100;\n                options.height = options.height || $this.height() || 100;\n\n            background_image.onload = function() {\n\n                options.img_width = background_image.width;\n                options.img_height = background_image.height;\n\n                options.img = background_image;\n                var get_rate = function() {\n                    return parseInt(1000 / options.fps);\n                }\n\n                if (!options.do_once) {\n                    setTimeout(function() {\n                        $._spritely.animate(options);\n                    }, get_rate(options.fps));\n                } else {\n                    setTimeout(function() {\n                        $._spritely.animate(options);\n                    }, 0);\n                }\n\n            }\n\n            background_image.src = background_image_src;\n\n            return this;\n\n        },\n\n        sprite: function(options) {\n            var options = $.extend({\n                type: 'sprite',\n                bounce: [0, 0, 1000] // up-down, left-right, milliseconds\n            }, options || {});\n            return $(this).spritely(options);\n        },\n        pan: function(options) {\n            var options = $.extend({\n                type: 'pan',\n                dir: 'left',\n                continuous: true,\n                speed: 1 // 1 pixel per frame\n            }, options || {});\n            return $(this).spritely(options);\n        },\n        flyToTap: function(options) {\n            var options = $.extend({\n                el_to_move: null,\n                type: 'moveToTap',\n                ms: 1000, // milliseconds\n                do_once: true\n            }, options || {});\n            if (options.el_to_move) {\n                $(options.el_to_move).active();\n            }\n            if ($._spritely.activeSprite) {\n                if (window.Touch) { // iphone method see http://cubiq.org/remove-onclick-delay-on-webkit-for-iphone/9 or http://www.nimblekit.com/tutorials.html for clues...\n                    $(this)[0].ontouchstart = function(e) {\n                        var el_to_move = $._spritely.activeSprite;\n                        var touch = e.touches[0];\n                        var t = touch.pageY - (el_to_move.height() / 2);\n                        var l = touch.pageX - (el_to_move.width() / 2);\n                        el_to_move.animate({\n                            top: t + 'px',\n                            left: l + 'px'\n                        }, 1000);\n                    };\n                } else {\n                    $(this).click(function(e) {\n                        var el_to_move = $._spritely.activeSprite;\n                        $(el_to_move).stop(true);\n                        var w = el_to_move.width();\n                        var h = el_to_move.height();\n                        var l = e.pageX - (w / 2);\n                        var t = e.pageY - (h / 2);\n                        el_to_move.animate({\n                            top: t + 'px',\n                            left: l + 'px'\n                        }, 1000);\n                    });\n                }\n            }\n            return this;\n        },\n        // isDraggable requires jQuery ui\n        isDraggable: function(options) {\n            if ((!$(this).draggable)) {\n                //console.log('To use the isDraggable method you need to load jquery-ui.js');\n                return this;\n            }\n            var options = $.extend({\n                type: 'isDraggable',\n                start: null,\n                stop: null,\n                drag: null\n            }, options || {});\n            var el_id = $(this).attr('id');\n            if (!$._spritely.instances[el_id]) {\n                return this;\n            }\n            $._spritely.instances[el_id].isDraggableOptions = options;\n            $(this).draggable({\n                start: function() {\n                    var el_id = $(this).attr('id');\n                    $._spritely.instances[el_id].stop_random = true;\n                    $(this).stop(true);\n                    if ($._spritely.instances[el_id].isDraggableOptions.start) {\n                        $._spritely.instances[el_id].isDraggableOptions.start(this);\n                    }\n                },\n                drag: options.drag,\n                stop: function() {\n                    var el_id = $(this).attr('id');\n                    $._spritely.instances[el_id].stop_random = false;\n                    if ($._spritely.instances[el_id].isDraggableOptions.stop) {\n                        $._spritely.instances[el_id].isDraggableOptions.stop(this);\n                    }\n                }\n            });\n            return this;\n        },\n        active: function() {\n            // the active sprite\n            $._spritely.activeSprite = this;\n            return this;\n        },\n        activeOnClick: function() {\n            // make this the active script if clicked...\n            var el = $(this);\n            if (window.Touch) { // iphone method see http://cubiq.org/remove-onclick-delay-on-webkit-for-iphone/9 or http://www.nimblekit.com/tutorials.html for clues...\n                el[0].ontouchstart = function(e) {\n                    $._spritely.activeSprite = el;\n                };\n            } else {\n                el.click(function(e) {\n                    $._spritely.activeSprite = el;\n                });\n            }\n            return this;\n        },\n        spRandom: function(options) {\n            var options = $.extend({\n                top: 50,\n                left: 50,\n                right: 290,\n                bottom: 320,\n                speed: 4000,\n                pause: 0\n            }, options || {});\n            var el_id = $(this).attr('id');\n            if (!$._spritely.instances[el_id]) {\n                return this;\n            }\n            if (!$._spritely.instances[el_id].stop_random) {\n                var r = $._spritely.randomIntBetween;\n                var t = r(options.top, options.bottom);\n                var l = r(options.left, options.right);\n                $('#' + el_id).animate({\n                    top: t + 'px',\n                    left: l + 'px'\n                }, options.speed)\n            }\n            window.setTimeout(function() {\n                $('#' + el_id).spRandom(options);\n            }, options.speed + options.pause)\n            return this;\n        },\n        makeAbsolute: function() {\n            // remove an element from its current position in the DOM and\n            // position it absolutely, appended to the body tag.\n            return this.each(function() {\n                var el = $(this);\n                var pos = el.position();\n                el.css({position: \"absolute\", marginLeft: 0, marginTop: 0, top: pos.top, left: pos.left })\n                    .remove()\n                    .appendTo(\"body\");\n            });\n\n        },\n        spSet: function(prop_name, prop_value) {\n            var el_id = $(this).attr('id');\n            $._spritely.instances[el_id][prop_name] = prop_value;\n            return this;\n        },\n        spGet: function(prop_name, prop_value) {\n            var el_id = $(this).attr('id');\n            return $._spritely.instances[el_id][prop_name];\n        },\n        spStop: function(bool) {\n            this.each(function() {\n                var $this = $(this),\n                    el_id = $this.attr('id');\n                if ($._spritely.instances[el_id]['options']['fps']) {\n                    $._spritely.instances[el_id]['_last_fps'] = $._spritely.instances[el_id]['options']['fps'];\n                }\n                if ($._spritely.instances[el_id]['type'] == 'sprite') {\n                    $this.spSet('fps', 0);\n                }\n                $._spritely.instances[el_id]['_stopped'] = true;\n                $._spritely.instances[el_id]['_stopped_f1'] = bool;\n                if (bool) {\n                    // set background image position to 0\n                    var bp_top = $._spritely.getBgY($(this));\n                    $this.css('background-position', '0 ' + bp_top);\n                }\n            });\n            return this;\n        },\n        spStart: function() {\n            $(this).each(function() {\n                var el_id = $(this).attr('id');\n                var fps = $._spritely.instances[el_id]['_last_fps'] || 12;\n                if ($._spritely.instances[el_id]['type'] == 'sprite') {\n                    $(this).spSet('fps', fps);\n                }\n                $._spritely.instances[el_id]['_stopped'] = false;\n            });\n            return this;\n        },\n        spToggle: function() {\n            var el_id = $(this).attr('id');\n            var stopped = $._spritely.instances[el_id]['_stopped'] || false;\n            var stopped_f1 = $._spritely.instances[el_id]['_stopped_f1'] || false;\n            if (stopped) {\n                $(this).spStart();\n            } else {\n                $(this).spStop(stopped_f1);\n            }\n            return this;\n        },\n        fps: function(fps) {\n            $(this).each(function() {\n                $(this).spSet('fps', fps);\n            });\n            return this;\n        },\n        goToFrame: function(n) {\n            var el_id = $(this).attr('id');\n            if ($._spritely.instances && $._spritely.instances[el_id]) {\n                $._spritely.instances[el_id]['current_frame'] = n - 1;\n            }\n            return this;\n        },\n        spSpeed: function(speed) {\n            $(this).each(function() {\n                $(this).spSet('speed', speed);\n            });\n            return this;\n        },\n        spRelSpeed: function(speed) {\n            $(this).each(function() {\n                var rel_depth = $(this).spGet('depth') / 100;\n                $(this).spSet('speed', speed * rel_depth);\n            });\n            return this;\n        },\n        spChangeDir: function(dir) {\n            $(this).each(function() {\n                $(this).spSet('dir', dir);\n            });\n            return this;\n        },\n        spState: function(n) {\n            $(this).each(function() {\n                // change state of a sprite, where state is the vertical\n                // position of the background image (e.g. frames row)\n                var yPos = ((n - 1) * $(this).height()) + 'px';\n                var xPos = $._spritely.getBgX($(this));\n                var bp = xPos + ' -' + yPos;\n                $(this).css('background-position', bp);\n            });\n            return this;\n        },\n        lockTo: function(el, options) {\n            $(this).each(function() {\n                var el_id = $(this).attr('id');\n                if (!$._spritely.instances[el_id]) {\n                    return this;\n                }\n                $._spritely.instances[el_id]['locked_el'] = $(this);\n                $._spritely.instances[el_id]['lock_to'] = $(el);\n                $._spritely.instances[el_id]['lock_to_options'] = options;\n                $._spritely.instances[el_id]['interval'] = window.setInterval(function() {\n                    if ($._spritely.instances[el_id]['lock_to']) {\n                        var locked_el = $._spritely.instances[el_id]['locked_el'];\n                        var locked_to_el = $._spritely.instances[el_id]['lock_to'];\n                        var locked_to_options = $._spritely.instances[el_id]['lock_to_options'];\n                        var locked_to_el_w = locked_to_options.bg_img_width;\n                        var locked_to_el_h = locked_to_el.height();\n                        var locked_to_el_y = $._spritely.getBgY(locked_to_el);\n                        var locked_to_el_x = $._spritely.getBgX(locked_to_el);\n                        var el_l = (parseInt(locked_to_el_x) + parseInt(locked_to_options['left']));\n                        var el_t = (parseInt(locked_to_el_y) + parseInt(locked_to_options['top']));\n                        el_l = $._spritely.get_rel_pos(el_l, locked_to_el_w);\n                        $(locked_el).css({\n                            'top': el_t + 'px',\n                            'left': el_l + 'px'\n                        });\n                    }\n                }, options.interval || 20);\n            });\n            return this;\n        },\n        destroy: function() {\n            var el = $(this);\n            var el_id = $(this).attr('id');\n            if ($._spritely.instances[el_id] && $._spritely.instances[el_id]['timeout']){\n                window.clearTimeout($._spritely.instances[el_id]['timeout']);\n            }\n            if ($._spritely.instances[el_id] && $._spritely.instances[el_id]['interval']) {\n                window.clearInterval($._spritely.instances[el_id]['interval']);\n            }\n            delete $._spritely.instances[el_id]\n            return this;\n        }\n    })\n})(jQuery);\n// Stop IE6 re-loading background images continuously\ntry {\n  document.execCommand(\"BackgroundImageCache\", false, true);\n} catch(err) {} \n","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.io=e()}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){module.exports=_dereq_(\"./lib/\")},{\"./lib/\":2}],2:[function(_dereq_,module,exports){var url=_dereq_(\"./url\");var parser=_dereq_(\"socket.io-parser\");var Manager=_dereq_(\"./manager\");var debug=_dereq_(\"debug\")(\"socket.io-client\");module.exports=exports=lookup;var cache=exports.managers={};function lookup(uri,opts){if(typeof uri==\"object\"){opts=uri;uri=undefined}opts=opts||{};var parsed=url(uri);var source=parsed.source;var id=parsed.id;var io;if(opts.forceNew||opts[\"force new connection\"]||false===opts.multiplex){debug(\"ignoring socket cache for %s\",source);io=Manager(source,opts)}else{if(!cache[id]){debug(\"new io instance for %s\",source);cache[id]=Manager(source,opts)}io=cache[id]}return io.socket(parsed.path)}exports.protocol=parser.protocol;exports.connect=lookup;exports.Manager=_dereq_(\"./manager\");exports.Socket=_dereq_(\"./socket\")},{\"./manager\":3,\"./socket\":5,\"./url\":6,debug:10,\"socket.io-parser\":46}],3:[function(_dereq_,module,exports){var url=_dereq_(\"./url\");var eio=_dereq_(\"engine.io-client\");var Socket=_dereq_(\"./socket\");var Emitter=_dereq_(\"component-emitter\");var parser=_dereq_(\"socket.io-parser\");var on=_dereq_(\"./on\");var bind=_dereq_(\"component-bind\");var object=_dereq_(\"object-component\");var debug=_dereq_(\"debug\")(\"socket.io-client:manager\");var indexOf=_dereq_(\"indexof\");var Backoff=_dereq_(\"backo2\");module.exports=Manager;function Manager(uri,opts){if(!(this instanceof Manager))return new Manager(uri,opts);if(uri&&\"object\"==typeof uri){opts=uri;uri=undefined}opts=opts||{};opts.path=opts.path||\"/socket.io\";this.nsps={};this.subs=[];this.opts=opts;this.reconnection(opts.reconnection!==false);this.reconnectionAttempts(opts.reconnectionAttempts||Infinity);this.reconnectionDelay(opts.reconnectionDelay||1e3);this.reconnectionDelayMax(opts.reconnectionDelayMax||5e3);this.randomizationFactor(opts.randomizationFactor||.5);this.backoff=new Backoff({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()});this.timeout(null==opts.timeout?2e4:opts.timeout);this.readyState=\"closed\";this.uri=uri;this.connected=[];this.encoding=false;this.packetBuffer=[];this.encoder=new parser.Encoder;this.decoder=new parser.Decoder;this.autoConnect=opts.autoConnect!==false;if(this.autoConnect)this.open()}Manager.prototype.emitAll=function(){this.emit.apply(this,arguments);for(var nsp in this.nsps){this.nsps[nsp].emit.apply(this.nsps[nsp],arguments)}};Manager.prototype.updateSocketIds=function(){for(var nsp in this.nsps){this.nsps[nsp].id=this.engine.id}};Emitter(Manager.prototype);Manager.prototype.reconnection=function(v){if(!arguments.length)return this._reconnection;this._reconnection=!!v;return this};Manager.prototype.reconnectionAttempts=function(v){if(!arguments.length)return this._reconnectionAttempts;this._reconnectionAttempts=v;return this};Manager.prototype.reconnectionDelay=function(v){if(!arguments.length)return this._reconnectionDelay;this._reconnectionDelay=v;this.backoff&&this.backoff.setMin(v);return this};Manager.prototype.randomizationFactor=function(v){if(!arguments.length)return this._randomizationFactor;this._randomizationFactor=v;this.backoff&&this.backoff.setJitter(v);return this};Manager.prototype.reconnectionDelayMax=function(v){if(!arguments.length)return this._reconnectionDelayMax;this._reconnectionDelayMax=v;this.backoff&&this.backoff.setMax(v);return this};Manager.prototype.timeout=function(v){if(!arguments.length)return this._timeout;this._timeout=v;return this};Manager.prototype.maybeReconnectOnOpen=function(){if(!this.reconnecting&&this._reconnection&&this.backoff.attempts===0){this.reconnect()}};Manager.prototype.open=Manager.prototype.connect=function(fn){debug(\"readyState %s\",this.readyState);if(~this.readyState.indexOf(\"open\"))return this;debug(\"opening %s\",this.uri);this.engine=eio(this.uri,this.opts);var socket=this.engine;var self=this;this.readyState=\"opening\";this.skipReconnect=false;var openSub=on(socket,\"open\",function(){self.onopen();fn&&fn()});var errorSub=on(socket,\"error\",function(data){debug(\"connect_error\");self.cleanup();self.readyState=\"closed\";self.emitAll(\"connect_error\",data);if(fn){var err=new Error(\"Connection error\");err.data=data;fn(err)}else{self.maybeReconnectOnOpen()}});if(false!==this._timeout){var timeout=this._timeout;debug(\"connect attempt will timeout after %d\",timeout);var timer=setTimeout(function(){debug(\"connect attempt timed out after %d\",timeout);openSub.destroy();socket.close();socket.emit(\"error\",\"timeout\");self.emitAll(\"connect_timeout\",timeout)},timeout);this.subs.push({destroy:function(){clearTimeout(timer)}})}this.subs.push(openSub);this.subs.push(errorSub);return this};Manager.prototype.onopen=function(){debug(\"open\");this.cleanup();this.readyState=\"open\";this.emit(\"open\");var socket=this.engine;this.subs.push(on(socket,\"data\",bind(this,\"ondata\")));this.subs.push(on(this.decoder,\"decoded\",bind(this,\"ondecoded\")));this.subs.push(on(socket,\"error\",bind(this,\"onerror\")));this.subs.push(on(socket,\"close\",bind(this,\"onclose\")))};Manager.prototype.ondata=function(data){this.decoder.add(data)};Manager.prototype.ondecoded=function(packet){this.emit(\"packet\",packet)};Manager.prototype.onerror=function(err){debug(\"error\",err);this.emitAll(\"error\",err)};Manager.prototype.socket=function(nsp){var socket=this.nsps[nsp];if(!socket){socket=new Socket(this,nsp);this.nsps[nsp]=socket;var self=this;socket.on(\"connect\",function(){socket.id=self.engine.id;if(!~indexOf(self.connected,socket)){self.connected.push(socket)}})}return socket};Manager.prototype.destroy=function(socket){var index=indexOf(this.connected,socket);if(~index)this.connected.splice(index,1);if(this.connected.length)return;this.close()};Manager.prototype.packet=function(packet){debug(\"writing packet %j\",packet);var self=this;if(!self.encoding){self.encoding=true;this.encoder.encode(packet,function(encodedPackets){for(var i=0;i<encodedPackets.length;i++){self.engine.write(encodedPackets[i])}self.encoding=false;self.processPacketQueue()})}else{self.packetBuffer.push(packet)}};Manager.prototype.processPacketQueue=function(){if(this.packetBuffer.length>0&&!this.encoding){var pack=this.packetBuffer.shift();this.packet(pack)}};Manager.prototype.cleanup=function(){var sub;while(sub=this.subs.shift())sub.destroy();this.packetBuffer=[];this.encoding=false;this.decoder.destroy()};Manager.prototype.close=Manager.prototype.disconnect=function(){this.skipReconnect=true;this.backoff.reset();this.readyState=\"closed\";this.engine&&this.engine.close()};Manager.prototype.onclose=function(reason){debug(\"close\");this.cleanup();this.backoff.reset();this.readyState=\"closed\";this.emit(\"close\",reason);if(this._reconnection&&!this.skipReconnect){this.reconnect()}};Manager.prototype.reconnect=function(){if(this.reconnecting||this.skipReconnect)return this;var self=this;if(this.backoff.attempts>=this._reconnectionAttempts){debug(\"reconnect failed\");this.backoff.reset();this.emitAll(\"reconnect_failed\");this.reconnecting=false}else{var delay=this.backoff.duration();debug(\"will wait %dms before reconnect attempt\",delay);this.reconnecting=true;var timer=setTimeout(function(){if(self.skipReconnect)return;debug(\"attempting reconnect\");self.emitAll(\"reconnect_attempt\",self.backoff.attempts);self.emitAll(\"reconnecting\",self.backoff.attempts);if(self.skipReconnect)return;self.open(function(err){if(err){debug(\"reconnect attempt error\");self.reconnecting=false;self.reconnect();self.emitAll(\"reconnect_error\",err.data)}else{debug(\"reconnect success\");self.onreconnect()}})},delay);this.subs.push({destroy:function(){clearTimeout(timer)}})}};Manager.prototype.onreconnect=function(){var attempt=this.backoff.attempts;this.reconnecting=false;this.backoff.reset();this.updateSocketIds();this.emitAll(\"reconnect\",attempt)}},{\"./on\":4,\"./socket\":5,\"./url\":6,backo2:7,\"component-bind\":8,\"component-emitter\":9,debug:10,\"engine.io-client\":11,indexof:42,\"object-component\":43,\"socket.io-parser\":46}],4:[function(_dereq_,module,exports){module.exports=on;function on(obj,ev,fn){obj.on(ev,fn);return{destroy:function(){obj.removeListener(ev,fn)}}}},{}],5:[function(_dereq_,module,exports){var parser=_dereq_(\"socket.io-parser\");var Emitter=_dereq_(\"component-emitter\");var toArray=_dereq_(\"to-array\");var on=_dereq_(\"./on\");var bind=_dereq_(\"component-bind\");var debug=_dereq_(\"debug\")(\"socket.io-client:socket\");var hasBin=_dereq_(\"has-binary\");module.exports=exports=Socket;var events={connect:1,connect_error:1,connect_timeout:1,disconnect:1,error:1,reconnect:1,reconnect_attempt:1,reconnect_failed:1,reconnect_error:1,reconnecting:1};var emit=Emitter.prototype.emit;function Socket(io,nsp){this.io=io;this.nsp=nsp;this.json=this;this.ids=0;this.acks={};if(this.io.autoConnect)this.open();this.receiveBuffer=[];this.sendBuffer=[];this.connected=false;this.disconnected=true}Emitter(Socket.prototype);Socket.prototype.subEvents=function(){if(this.subs)return;var io=this.io;this.subs=[on(io,\"open\",bind(this,\"onopen\")),on(io,\"packet\",bind(this,\"onpacket\")),on(io,\"close\",bind(this,\"onclose\"))]};Socket.prototype.open=Socket.prototype.connect=function(){if(this.connected)return this;this.subEvents();this.io.open();if(\"open\"==this.io.readyState)this.onopen();return this};Socket.prototype.send=function(){var args=toArray(arguments);args.unshift(\"message\");this.emit.apply(this,args);return this};Socket.prototype.emit=function(ev){if(events.hasOwnProperty(ev)){emit.apply(this,arguments);return this}var args=toArray(arguments);var parserType=parser.EVENT;if(hasBin(args)){parserType=parser.BINARY_EVENT}var packet={type:parserType,data:args};if(\"function\"==typeof args[args.length-1]){debug(\"emitting packet with ack id %d\",this.ids);this.acks[this.ids]=args.pop();packet.id=this.ids++}if(this.connected){this.packet(packet)}else{this.sendBuffer.push(packet)}return this};Socket.prototype.packet=function(packet){packet.nsp=this.nsp;this.io.packet(packet)};Socket.prototype.onopen=function(){debug(\"transport is open - connecting\");if(\"/\"!=this.nsp){this.packet({type:parser.CONNECT})}};Socket.prototype.onclose=function(reason){debug(\"close (%s)\",reason);this.connected=false;this.disconnected=true;delete this.id;this.emit(\"disconnect\",reason)};Socket.prototype.onpacket=function(packet){if(packet.nsp!=this.nsp)return;switch(packet.type){case parser.CONNECT:this.onconnect();break;case parser.EVENT:this.onevent(packet);break;case parser.BINARY_EVENT:this.onevent(packet);break;case parser.ACK:this.onack(packet);break;case parser.BINARY_ACK:this.onack(packet);break;case parser.DISCONNECT:this.ondisconnect();break;case parser.ERROR:this.emit(\"error\",packet.data);break}};Socket.prototype.onevent=function(packet){var args=packet.data||[];debug(\"emitting event %j\",args);if(null!=packet.id){debug(\"attaching ack callback to event\");args.push(this.ack(packet.id))}if(this.connected){emit.apply(this,args)}else{this.receiveBuffer.push(args)}};Socket.prototype.ack=function(id){var self=this;var sent=false;return function(){if(sent)return;sent=true;var args=toArray(arguments);debug(\"sending ack %j\",args);var type=hasBin(args)?parser.BINARY_ACK:parser.ACK;self.packet({type:type,id:id,data:args})}};Socket.prototype.onack=function(packet){debug(\"calling ack %s with %j\",packet.id,packet.data);var fn=this.acks[packet.id];fn.apply(this,packet.data);delete this.acks[packet.id]};Socket.prototype.onconnect=function(){this.connected=true;this.disconnected=false;this.emit(\"connect\");this.emitBuffered()};Socket.prototype.emitBuffered=function(){var i;for(i=0;i<this.receiveBuffer.length;i++){emit.apply(this,this.receiveBuffer[i])}this.receiveBuffer=[];for(i=0;i<this.sendBuffer.length;i++){this.packet(this.sendBuffer[i])}this.sendBuffer=[]};Socket.prototype.ondisconnect=function(){debug(\"server disconnect (%s)\",this.nsp);this.destroy();this.onclose(\"io server disconnect\")};Socket.prototype.destroy=function(){if(this.subs){for(var i=0;i<this.subs.length;i++){this.subs[i].destroy()}this.subs=null}this.io.destroy(this)};Socket.prototype.close=Socket.prototype.disconnect=function(){if(this.connected){debug(\"performing disconnect (%s)\",this.nsp);this.packet({type:parser.DISCONNECT})}this.destroy();if(this.connected){this.onclose(\"io client disconnect\")}return this}},{\"./on\":4,\"component-bind\":8,\"component-emitter\":9,debug:10,\"has-binary\":38,\"socket.io-parser\":46,\"to-array\":50}],6:[function(_dereq_,module,exports){(function(global){var parseuri=_dereq_(\"parseuri\");var debug=_dereq_(\"debug\")(\"socket.io-client:url\");module.exports=url;function url(uri,loc){var obj=uri;var loc=loc||global.location;if(null==uri)uri=loc.protocol+\"//\"+loc.host;if(\"string\"==typeof uri){if(\"/\"==uri.charAt(0)){if(\"/\"==uri.charAt(1)){uri=loc.protocol+uri}else{uri=loc.hostname+uri}}if(!/^(https?|wss?):\\/\\//.test(uri)){debug(\"protocol-less url %s\",uri);if(\"undefined\"!=typeof loc){uri=loc.protocol+\"//\"+uri}else{uri=\"https://\"+uri}}debug(\"parse %s\",uri);obj=parseuri(uri)}if(!obj.port){if(/^(http|ws)$/.test(obj.protocol)){obj.port=\"80\"}else if(/^(http|ws)s$/.test(obj.protocol)){obj.port=\"443\"}}obj.path=obj.path||\"/\";obj.id=obj.protocol+\"://\"+obj.host+\":\"+obj.port;obj.href=obj.protocol+\"://\"+obj.host+(loc&&loc.port==obj.port?\"\":\":\"+obj.port);return obj}}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{debug:10,parseuri:44}],7:[function(_dereq_,module,exports){module.exports=Backoff;function Backoff(opts){opts=opts||{};this.ms=opts.min||100;this.max=opts.max||1e4;this.factor=opts.factor||2;this.jitter=opts.jitter>0&&opts.jitter<=1?opts.jitter:0;this.attempts=0}Backoff.prototype.duration=function(){var ms=this.ms*Math.pow(this.factor,this.attempts++);if(this.jitter){var rand=Math.random();var deviation=Math.floor(rand*this.jitter*ms);ms=(Math.floor(rand*10)&1)==0?ms-deviation:ms+deviation}return Math.min(ms,this.max)|0};Backoff.prototype.reset=function(){this.attempts=0};Backoff.prototype.setMin=function(min){this.ms=min};Backoff.prototype.setMax=function(max){this.max=max};Backoff.prototype.setJitter=function(jitter){this.jitter=jitter}},{}],8:[function(_dereq_,module,exports){var slice=[].slice;module.exports=function(obj,fn){if(\"string\"==typeof fn)fn=obj[fn];if(\"function\"!=typeof fn)throw new Error(\"bind() requires a function\");var args=slice.call(arguments,2);return function(){return fn.apply(obj,args.concat(slice.call(arguments)))}}},{}],9:[function(_dereq_,module,exports){module.exports=Emitter;function Emitter(obj){if(obj)return mixin(obj)}function mixin(obj){for(var key in Emitter.prototype){obj[key]=Emitter.prototype[key]}return obj}Emitter.prototype.on=Emitter.prototype.addEventListener=function(event,fn){this._callbacks=this._callbacks||{};(this._callbacks[event]=this._callbacks[event]||[]).push(fn);return this};Emitter.prototype.once=function(event,fn){var self=this;this._callbacks=this._callbacks||{};function on(){self.off(event,on);fn.apply(this,arguments)}on.fn=fn;this.on(event,on);return this};Emitter.prototype.off=Emitter.prototype.removeListener=Emitter.prototype.removeAllListeners=Emitter.prototype.removeEventListener=function(event,fn){this._callbacks=this._callbacks||{};if(0==arguments.length){this._callbacks={};return this}var callbacks=this._callbacks[event];if(!callbacks)return this;if(1==arguments.length){delete this._callbacks[event];return this}var cb;for(var i=0;i<callbacks.length;i++){cb=callbacks[i];if(cb===fn||cb.fn===fn){callbacks.splice(i,1);break}}return this};Emitter.prototype.emit=function(event){this._callbacks=this._callbacks||{};var args=[].slice.call(arguments,1),callbacks=this._callbacks[event];if(callbacks){callbacks=callbacks.slice(0);for(var i=0,len=callbacks.length;i<len;++i){callbacks[i].apply(this,args)}}return this};Emitter.prototype.listeners=function(event){this._callbacks=this._callbacks||{};return this._callbacks[event]||[]};Emitter.prototype.hasListeners=function(event){return!!this.listeners(event).length}},{}],10:[function(_dereq_,module,exports){module.exports=debug;function debug(name){if(!debug.enabled(name))return function(){};return function(fmt){fmt=coerce(fmt);var curr=new Date;var ms=curr-(debug[name]||curr);debug[name]=curr;fmt=name+\" \"+fmt+\" +\"+debug.humanize(ms);window.console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)}}debug.names=[];debug.skips=[];debug.enable=function(name){try{localStorage.debug=name}catch(e){}var split=(name||\"\").split(/[\\s,]+/),len=split.length;for(var i=0;i<len;i++){name=split[i].replace(\"*\",\".*?\");if(name[0]===\"-\"){debug.skips.push(new RegExp(\"^\"+name.substr(1)+\"$\"))}else{debug.names.push(new RegExp(\"^\"+name+\"$\"))}}};debug.disable=function(){debug.enable(\"\")};debug.humanize=function(ms){var sec=1e3,min=60*1e3,hour=60*min;if(ms>=hour)return(ms/hour).toFixed(1)+\"h\";if(ms>=min)return(ms/min).toFixed(1)+\"m\";if(ms>=sec)return(ms/sec|0)+\"s\";return ms+\"ms\"};debug.enabled=function(name){for(var i=0,len=debug.skips.length;i<len;i++){if(debug.skips[i].test(name)){return false}}for(var i=0,len=debug.names.length;i<len;i++){if(debug.names[i].test(name)){return true}}return false};function coerce(val){if(val instanceof Error)return val.stack||val.message;return val}try{if(window.localStorage)debug.enable(localStorage.debug)}catch(e){}},{}],11:[function(_dereq_,module,exports){module.exports=_dereq_(\"./lib/\")},{\"./lib/\":12}],12:[function(_dereq_,module,exports){module.exports=_dereq_(\"./socket\");module.exports.parser=_dereq_(\"engine.io-parser\")},{\"./socket\":13,\"engine.io-parser\":25}],13:[function(_dereq_,module,exports){(function(global){var transports=_dereq_(\"./transports\");var Emitter=_dereq_(\"component-emitter\");var debug=_dereq_(\"debug\")(\"engine.io-client:socket\");var index=_dereq_(\"indexof\");var parser=_dereq_(\"engine.io-parser\");var parseuri=_dereq_(\"parseuri\");var parsejson=_dereq_(\"parsejson\");var parseqs=_dereq_(\"parseqs\");module.exports=Socket;function noop(){}function Socket(uri,opts){if(!(this instanceof Socket))return new Socket(uri,opts);opts=opts||{};if(uri&&\"object\"==typeof uri){opts=uri;uri=null}if(uri){uri=parseuri(uri);opts.host=uri.host;opts.secure=uri.protocol==\"https\"||uri.protocol==\"wss\";opts.port=uri.port;if(uri.query)opts.query=uri.query}this.secure=null!=opts.secure?opts.secure:global.location&&\"https:\"==location.protocol;if(opts.host){var pieces=opts.host.split(\":\");opts.hostname=pieces.shift();if(pieces.length){opts.port=pieces.pop()}else if(!opts.port){opts.port=this.secure?\"443\":\"80\"}}this.agent=opts.agent||false;this.hostname=opts.hostname||(global.location?location.hostname:\"localhost\");this.port=opts.port||(global.location&&location.port?location.port:this.secure?443:80);this.query=opts.query||{};if(\"string\"==typeof this.query)this.query=parseqs.decode(this.query);this.upgrade=false!==opts.upgrade;this.path=(opts.path||\"/engine.io\").replace(/\\/$/,\"\")+\"/\";this.forceJSONP=!!opts.forceJSONP;this.jsonp=false!==opts.jsonp;this.forceBase64=!!opts.forceBase64;this.enablesXDR=!!opts.enablesXDR;this.timestampParam=opts.timestampParam||\"t\";this.timestampRequests=opts.timestampRequests;this.transports=opts.transports||[\"polling\",\"websocket\"];this.readyState=\"\";this.writeBuffer=[];this.callbackBuffer=[];this.policyPort=opts.policyPort||843;this.rememberUpgrade=opts.rememberUpgrade||false;this.binaryType=null;this.onlyBinaryUpgrades=opts.onlyBinaryUpgrades;this.pfx=opts.pfx||null;this.key=opts.key||null;this.passphrase=opts.passphrase||null;this.cert=opts.cert||null;this.ca=opts.ca||null;this.ciphers=opts.ciphers||null;this.rejectUnauthorized=opts.rejectUnauthorized||null;this.open()}Socket.priorWebsocketSuccess=false;Emitter(Socket.prototype);Socket.protocol=parser.protocol;Socket.Socket=Socket;Socket.Transport=_dereq_(\"./transport\");Socket.transports=_dereq_(\"./transports\");Socket.parser=_dereq_(\"engine.io-parser\");Socket.prototype.createTransport=function(name){debug('creating transport \"%s\"',name);var query=clone(this.query);query.EIO=parser.protocol;query.transport=name;if(this.id)query.sid=this.id;var transport=new transports[name]({agent:this.agent,hostname:this.hostname,port:this.port,secure:this.secure,path:this.path,query:query,forceJSONP:this.forceJSONP,jsonp:this.jsonp,forceBase64:this.forceBase64,enablesXDR:this.enablesXDR,timestampRequests:this.timestampRequests,timestampParam:this.timestampParam,policyPort:this.policyPort,socket:this,pfx:this.pfx,key:this.key,passphrase:this.passphrase,cert:this.cert,ca:this.ca,ciphers:this.ciphers,rejectUnauthorized:this.rejectUnauthorized});return transport};function clone(obj){var o={};for(var i in obj){if(obj.hasOwnProperty(i)){o[i]=obj[i]}}return o}Socket.prototype.open=function(){var transport;if(this.rememberUpgrade&&Socket.priorWebsocketSuccess&&this.transports.indexOf(\"websocket\")!=-1){transport=\"websocket\"}else if(0==this.transports.length){var self=this;setTimeout(function(){self.emit(\"error\",\"No transports available\")},0);return}else{transport=this.transports[0]}this.readyState=\"opening\";var transport;try{transport=this.createTransport(transport)}catch(e){this.transports.shift();this.open();return}transport.open();this.setTransport(transport)};Socket.prototype.setTransport=function(transport){debug(\"setting transport %s\",transport.name);var self=this;if(this.transport){debug(\"clearing existing transport %s\",this.transport.name);this.transport.removeAllListeners()}this.transport=transport;transport.on(\"drain\",function(){self.onDrain()}).on(\"packet\",function(packet){self.onPacket(packet)}).on(\"error\",function(e){self.onError(e)}).on(\"close\",function(){self.onClose(\"transport close\")})};Socket.prototype.probe=function(name){debug('probing transport \"%s\"',name);var transport=this.createTransport(name,{probe:1}),failed=false,self=this;Socket.priorWebsocketSuccess=false;function onTransportOpen(){if(self.onlyBinaryUpgrades){var upgradeLosesBinary=!this.supportsBinary&&self.transport.supportsBinary;failed=failed||upgradeLosesBinary}if(failed)return;debug('probe transport \"%s\" opened',name);transport.send([{type:\"ping\",data:\"probe\"}]);transport.once(\"packet\",function(msg){if(failed)return;if(\"pong\"==msg.type&&\"probe\"==msg.data){debug('probe transport \"%s\" pong',name);self.upgrading=true;self.emit(\"upgrading\",transport);if(!transport)return;Socket.priorWebsocketSuccess=\"websocket\"==transport.name;debug('pausing current transport \"%s\"',self.transport.name);self.transport.pause(function(){if(failed)return;if(\"closed\"==self.readyState)return;debug(\"changing transport and sending upgrade packet\");cleanup();self.setTransport(transport);transport.send([{type:\"upgrade\"}]);self.emit(\"upgrade\",transport);transport=null;self.upgrading=false;self.flush()})}else{debug('probe transport \"%s\" failed',name);var err=new Error(\"probe error\");err.transport=transport.name;self.emit(\"upgradeError\",err)}})}function freezeTransport(){if(failed)return;failed=true;cleanup();transport.close();transport=null}function onerror(err){var error=new Error(\"probe error: \"+err);error.transport=transport.name;freezeTransport();debug('probe transport \"%s\" failed because of error: %s',name,err);self.emit(\"upgradeError\",error)}function onTransportClose(){onerror(\"transport closed\")}function onclose(){onerror(\"socket closed\")}function onupgrade(to){if(transport&&to.name!=transport.name){debug('\"%s\" works - aborting \"%s\"',to.name,transport.name);freezeTransport()}}function cleanup(){transport.removeListener(\"open\",onTransportOpen);transport.removeListener(\"error\",onerror);transport.removeListener(\"close\",onTransportClose);self.removeListener(\"close\",onclose);self.removeListener(\"upgrading\",onupgrade)}transport.once(\"open\",onTransportOpen);transport.once(\"error\",onerror);transport.once(\"close\",onTransportClose);this.once(\"close\",onclose);this.once(\"upgrading\",onupgrade);transport.open()};Socket.prototype.onOpen=function(){debug(\"socket open\");this.readyState=\"open\";Socket.priorWebsocketSuccess=\"websocket\"==this.transport.name;this.emit(\"open\");this.flush();if(\"open\"==this.readyState&&this.upgrade&&this.transport.pause){debug(\"starting upgrade probes\");for(var i=0,l=this.upgrades.length;i<l;i++){this.probe(this.upgrades[i])}}};Socket.prototype.onPacket=function(packet){if(\"opening\"==this.readyState||\"open\"==this.readyState){debug('socket receive: type \"%s\", data \"%s\"',packet.type,packet.data);this.emit(\"packet\",packet);this.emit(\"heartbeat\");switch(packet.type){case\"open\":this.onHandshake(parsejson(packet.data));break;case\"pong\":this.setPing();break;case\"error\":var err=new Error(\"server error\");err.code=packet.data;this.emit(\"error\",err);break;case\"message\":this.emit(\"data\",packet.data);this.emit(\"message\",packet.data);break}}else{debug('packet received with socket readyState \"%s\"',this.readyState)}};Socket.prototype.onHandshake=function(data){this.emit(\"handshake\",data);this.id=data.sid;this.transport.query.sid=data.sid;this.upgrades=this.filterUpgrades(data.upgrades);this.pingInterval=data.pingInterval;this.pingTimeout=data.pingTimeout;this.onOpen();if(\"closed\"==this.readyState)return;this.setPing();this.removeListener(\"heartbeat\",this.onHeartbeat);this.on(\"heartbeat\",this.onHeartbeat)};Socket.prototype.onHeartbeat=function(timeout){clearTimeout(this.pingTimeoutTimer);var self=this;self.pingTimeoutTimer=setTimeout(function(){if(\"closed\"==self.readyState)return;self.onClose(\"ping timeout\")},timeout||self.pingInterval+self.pingTimeout)};Socket.prototype.setPing=function(){var self=this;clearTimeout(self.pingIntervalTimer);self.pingIntervalTimer=setTimeout(function(){debug(\"writing ping packet - expecting pong within %sms\",self.pingTimeout);self.ping();self.onHeartbeat(self.pingTimeout)},self.pingInterval)};Socket.prototype.ping=function(){this.sendPacket(\"ping\")};Socket.prototype.onDrain=function(){for(var i=0;i<this.prevBufferLen;i++){if(this.callbackBuffer[i]){this.callbackBuffer[i]()}}this.writeBuffer.splice(0,this.prevBufferLen);this.callbackBuffer.splice(0,this.prevBufferLen);this.prevBufferLen=0;if(this.writeBuffer.length==0){this.emit(\"drain\")}else{this.flush()}};Socket.prototype.flush=function(){if(\"closed\"!=this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){debug(\"flushing %d packets in socket\",this.writeBuffer.length);this.transport.send(this.writeBuffer);this.prevBufferLen=this.writeBuffer.length;this.emit(\"flush\")}};Socket.prototype.write=Socket.prototype.send=function(msg,fn){this.sendPacket(\"message\",msg,fn);return this};Socket.prototype.sendPacket=function(type,data,fn){if(\"closing\"==this.readyState||\"closed\"==this.readyState){return}var packet={type:type,data:data};this.emit(\"packetCreate\",packet);this.writeBuffer.push(packet);this.callbackBuffer.push(fn);this.flush()};Socket.prototype.close=function(){if(\"opening\"==this.readyState||\"open\"==this.readyState){this.readyState=\"closing\";var self=this;function close(){self.onClose(\"forced close\");debug(\"socket closing - telling transport to close\");self.transport.close()}function cleanupAndClose(){self.removeListener(\"upgrade\",cleanupAndClose);self.removeListener(\"upgradeError\",cleanupAndClose);close()}function waitForUpgrade(){self.once(\"upgrade\",cleanupAndClose);self.once(\"upgradeError\",cleanupAndClose)}if(this.writeBuffer.length){this.once(\"drain\",function(){if(this.upgrading){waitForUpgrade()}else{close()}})}else if(this.upgrading){waitForUpgrade()}else{close()}}return this};Socket.prototype.onError=function(err){debug(\"socket error %j\",err);Socket.priorWebsocketSuccess=false;this.emit(\"error\",err);this.onClose(\"transport error\",err)};Socket.prototype.onClose=function(reason,desc){if(\"opening\"==this.readyState||\"open\"==this.readyState||\"closing\"==this.readyState){debug('socket close with reason: \"%s\"',reason);var self=this;clearTimeout(this.pingIntervalTimer);clearTimeout(this.pingTimeoutTimer);setTimeout(function(){self.writeBuffer=[];self.callbackBuffer=[];self.prevBufferLen=0},0);this.transport.removeAllListeners(\"close\");this.transport.close();this.transport.removeAllListeners();this.readyState=\"closed\";this.id=null;this.emit(\"close\",reason,desc)}};Socket.prototype.filterUpgrades=function(upgrades){var filteredUpgrades=[];for(var i=0,j=upgrades.length;i<j;i++){if(~index(this.transports,upgrades[i]))filteredUpgrades.push(upgrades[i])}return filteredUpgrades}}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{\"./transport\":14,\"./transports\":15,\"component-emitter\":9,debug:22,\"engine.io-parser\":25,indexof:42,parsejson:34,parseqs:35,parseuri:36}],14:[function(_dereq_,module,exports){var parser=_dereq_(\"engine.io-parser\");var Emitter=_dereq_(\"component-emitter\");module.exports=Transport;function Transport(opts){this.path=opts.path;this.hostname=opts.hostname;this.port=opts.port;this.secure=opts.secure;this.query=opts.query;this.timestampParam=opts.timestampParam;this.timestampRequests=opts.timestampRequests;this.readyState=\"\";this.agent=opts.agent||false;this.socket=opts.socket;this.enablesXDR=opts.enablesXDR;this.pfx=opts.pfx;this.key=opts.key;this.passphrase=opts.passphrase;this.cert=opts.cert;this.ca=opts.ca;this.ciphers=opts.ciphers;this.rejectUnauthorized=opts.rejectUnauthorized}Emitter(Transport.prototype);Transport.timestamps=0;Transport.prototype.onError=function(msg,desc){var err=new Error(msg);err.type=\"TransportError\";err.description=desc;this.emit(\"error\",err);return this};Transport.prototype.open=function(){if(\"closed\"==this.readyState||\"\"==this.readyState){this.readyState=\"opening\";this.doOpen()}return this};Transport.prototype.close=function(){if(\"opening\"==this.readyState||\"open\"==this.readyState){this.doClose();this.onClose()}return this};Transport.prototype.send=function(packets){if(\"open\"==this.readyState){this.write(packets)}else{throw new Error(\"Transport not open\")}};Transport.prototype.onOpen=function(){this.readyState=\"open\";this.writable=true;this.emit(\"open\")};Transport.prototype.onData=function(data){var packet=parser.decodePacket(data,this.socket.binaryType);this.onPacket(packet)};Transport.prototype.onPacket=function(packet){this.emit(\"packet\",packet)};Transport.prototype.onClose=function(){this.readyState=\"closed\";this.emit(\"close\")}},{\"component-emitter\":9,\"engine.io-parser\":25}],15:[function(_dereq_,module,exports){(function(global){var XMLHttpRequest=_dereq_(\"xmlhttprequest\");var XHR=_dereq_(\"./polling-xhr\");var JSONP=_dereq_(\"./polling-jsonp\");var websocket=_dereq_(\"./websocket\");exports.polling=polling;exports.websocket=websocket;function polling(opts){var xhr;var xd=false;var xs=false;var jsonp=false!==opts.jsonp;if(global.location){var isSSL=\"https:\"==location.protocol;var port=location.port;if(!port){port=isSSL?443:80}xd=opts.hostname!=location.hostname||port!=opts.port;xs=opts.secure!=isSSL}opts.xdomain=xd;opts.xscheme=xs;xhr=new XMLHttpRequest(opts);if(\"open\"in xhr&&!opts.forceJSONP){return new XHR(opts)}else{if(!jsonp)throw new Error(\"JSONP disabled\");return new JSONP(opts)}}}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{\"./polling-jsonp\":16,\"./polling-xhr\":17,\"./websocket\":19,xmlhttprequest:20}],16:[function(_dereq_,module,exports){(function(global){var Polling=_dereq_(\"./polling\");var inherit=_dereq_(\"component-inherit\");module.exports=JSONPPolling;var rNewline=/\\n/g;var rEscapedNewline=/\\\\n/g;var callbacks;var index=0;function empty(){}function JSONPPolling(opts){Polling.call(this,opts);\nthis.query=this.query||{};if(!callbacks){if(!global.___eio)global.___eio=[];callbacks=global.___eio}this.index=callbacks.length;var self=this;callbacks.push(function(msg){self.onData(msg)});this.query.j=this.index;if(global.document&&global.addEventListener){global.addEventListener(\"beforeunload\",function(){if(self.script)self.script.onerror=empty},false)}}inherit(JSONPPolling,Polling);JSONPPolling.prototype.supportsBinary=false;JSONPPolling.prototype.doClose=function(){if(this.script){this.script.parentNode.removeChild(this.script);this.script=null}if(this.form){this.form.parentNode.removeChild(this.form);this.form=null;this.iframe=null}Polling.prototype.doClose.call(this)};JSONPPolling.prototype.doPoll=function(){var self=this;var script=document.createElement(\"script\");if(this.script){this.script.parentNode.removeChild(this.script);this.script=null}script.async=true;script.src=this.uri();script.onerror=function(e){self.onError(\"jsonp poll error\",e)};var insertAt=document.getElementsByTagName(\"script\")[0];insertAt.parentNode.insertBefore(script,insertAt);this.script=script;var isUAgecko=\"undefined\"!=typeof navigator&&/gecko/i.test(navigator.userAgent);if(isUAgecko){setTimeout(function(){var iframe=document.createElement(\"iframe\");document.body.appendChild(iframe);document.body.removeChild(iframe)},100)}};JSONPPolling.prototype.doWrite=function(data,fn){var self=this;if(!this.form){var form=document.createElement(\"form\");var area=document.createElement(\"textarea\");var id=this.iframeId=\"eio_iframe_\"+this.index;var iframe;form.className=\"socketio\";form.style.position=\"absolute\";form.style.top=\"-1000px\";form.style.left=\"-1000px\";form.target=id;form.method=\"POST\";form.setAttribute(\"accept-charset\",\"utf-8\");area.name=\"d\";form.appendChild(area);document.body.appendChild(form);this.form=form;this.area=area}this.form.action=this.uri();function complete(){initIframe();fn()}function initIframe(){if(self.iframe){try{self.form.removeChild(self.iframe)}catch(e){self.onError(\"jsonp polling iframe removal error\",e)}}try{var html='<iframe src=\"javascript:0\" name=\"'+self.iframeId+'\">';iframe=document.createElement(html)}catch(e){iframe=document.createElement(\"iframe\");iframe.name=self.iframeId;iframe.src=\"javascript:0\"}iframe.id=self.iframeId;self.form.appendChild(iframe);self.iframe=iframe}initIframe();data=data.replace(rEscapedNewline,\"\\\\\\n\");this.area.value=data.replace(rNewline,\"\\\\n\");try{this.form.submit()}catch(e){}if(this.iframe.attachEvent){this.iframe.onreadystatechange=function(){if(self.iframe.readyState==\"complete\"){complete()}}}else{this.iframe.onload=complete}}}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{\"./polling\":18,\"component-inherit\":21}],17:[function(_dereq_,module,exports){(function(global){var XMLHttpRequest=_dereq_(\"xmlhttprequest\");var Polling=_dereq_(\"./polling\");var Emitter=_dereq_(\"component-emitter\");var inherit=_dereq_(\"component-inherit\");var debug=_dereq_(\"debug\")(\"engine.io-client:polling-xhr\");module.exports=XHR;module.exports.Request=Request;function empty(){}function XHR(opts){Polling.call(this,opts);if(global.location){var isSSL=\"https:\"==location.protocol;var port=location.port;if(!port){port=isSSL?443:80}this.xd=opts.hostname!=global.location.hostname||port!=opts.port;this.xs=opts.secure!=isSSL}}inherit(XHR,Polling);XHR.prototype.supportsBinary=true;XHR.prototype.request=function(opts){opts=opts||{};opts.uri=this.uri();opts.xd=this.xd;opts.xs=this.xs;opts.agent=this.agent||false;opts.supportsBinary=this.supportsBinary;opts.enablesXDR=this.enablesXDR;opts.pfx=this.pfx;opts.key=this.key;opts.passphrase=this.passphrase;opts.cert=this.cert;opts.ca=this.ca;opts.ciphers=this.ciphers;opts.rejectUnauthorized=this.rejectUnauthorized;return new Request(opts)};XHR.prototype.doWrite=function(data,fn){var isBinary=typeof data!==\"string\"&&data!==undefined;var req=this.request({method:\"POST\",data:data,isBinary:isBinary});var self=this;req.on(\"success\",fn);req.on(\"error\",function(err){self.onError(\"xhr post error\",err)});this.sendXhr=req};XHR.prototype.doPoll=function(){debug(\"xhr poll\");var req=this.request();var self=this;req.on(\"data\",function(data){self.onData(data)});req.on(\"error\",function(err){self.onError(\"xhr poll error\",err)});this.pollXhr=req};function Request(opts){this.method=opts.method||\"GET\";this.uri=opts.uri;this.xd=!!opts.xd;this.xs=!!opts.xs;this.async=false!==opts.async;this.data=undefined!=opts.data?opts.data:null;this.agent=opts.agent;this.isBinary=opts.isBinary;this.supportsBinary=opts.supportsBinary;this.enablesXDR=opts.enablesXDR;this.pfx=opts.pfx;this.key=opts.key;this.passphrase=opts.passphrase;this.cert=opts.cert;this.ca=opts.ca;this.ciphers=opts.ciphers;this.rejectUnauthorized=opts.rejectUnauthorized;this.create()}Emitter(Request.prototype);Request.prototype.create=function(){var opts={agent:this.agent,xdomain:this.xd,xscheme:this.xs,enablesXDR:this.enablesXDR};opts.pfx=this.pfx;opts.key=this.key;opts.passphrase=this.passphrase;opts.cert=this.cert;opts.ca=this.ca;opts.ciphers=this.ciphers;opts.rejectUnauthorized=this.rejectUnauthorized;var xhr=this.xhr=new XMLHttpRequest(opts);var self=this;try{debug(\"xhr open %s: %s\",this.method,this.uri);xhr.open(this.method,this.uri,this.async);if(this.supportsBinary){xhr.responseType=\"arraybuffer\"}if(\"POST\"==this.method){try{if(this.isBinary){xhr.setRequestHeader(\"Content-type\",\"application/octet-stream\")}else{xhr.setRequestHeader(\"Content-type\",\"text/plain;charset=UTF-8\")}}catch(e){}}if(\"withCredentials\"in xhr){xhr.withCredentials=true}if(this.hasXDR()){xhr.onload=function(){self.onLoad()};xhr.onerror=function(){self.onError(xhr.responseText)}}else{xhr.onreadystatechange=function(){if(4!=xhr.readyState)return;if(200==xhr.status||1223==xhr.status){self.onLoad()}else{setTimeout(function(){self.onError(xhr.status)},0)}}}debug(\"xhr data %s\",this.data);xhr.send(this.data)}catch(e){setTimeout(function(){self.onError(e)},0);return}if(global.document){this.index=Request.requestsCount++;Request.requests[this.index]=this}};Request.prototype.onSuccess=function(){this.emit(\"success\");this.cleanup()};Request.prototype.onData=function(data){this.emit(\"data\",data);this.onSuccess()};Request.prototype.onError=function(err){this.emit(\"error\",err);this.cleanup(true)};Request.prototype.cleanup=function(fromError){if(\"undefined\"==typeof this.xhr||null===this.xhr){return}if(this.hasXDR()){this.xhr.onload=this.xhr.onerror=empty}else{this.xhr.onreadystatechange=empty}if(fromError){try{this.xhr.abort()}catch(e){}}if(global.document){delete Request.requests[this.index]}this.xhr=null};Request.prototype.onLoad=function(){var data;try{var contentType;try{contentType=this.xhr.getResponseHeader(\"Content-Type\").split(\";\")[0]}catch(e){}if(contentType===\"application/octet-stream\"){data=this.xhr.response}else{if(!this.supportsBinary){data=this.xhr.responseText}else{data=\"ok\"}}}catch(e){this.onError(e)}if(null!=data){this.onData(data)}};Request.prototype.hasXDR=function(){return\"undefined\"!==typeof global.XDomainRequest&&!this.xs&&this.enablesXDR};Request.prototype.abort=function(){this.cleanup()};if(global.document){Request.requestsCount=0;Request.requests={};if(global.attachEvent){global.attachEvent(\"onunload\",unloadHandler)}else if(global.addEventListener){global.addEventListener(\"beforeunload\",unloadHandler,false)}}function unloadHandler(){for(var i in Request.requests){if(Request.requests.hasOwnProperty(i)){Request.requests[i].abort()}}}}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{\"./polling\":18,\"component-emitter\":9,\"component-inherit\":21,debug:22,xmlhttprequest:20}],18:[function(_dereq_,module,exports){var Transport=_dereq_(\"../transport\");var parseqs=_dereq_(\"parseqs\");var parser=_dereq_(\"engine.io-parser\");var inherit=_dereq_(\"component-inherit\");var debug=_dereq_(\"debug\")(\"engine.io-client:polling\");module.exports=Polling;var hasXHR2=function(){var XMLHttpRequest=_dereq_(\"xmlhttprequest\");var xhr=new XMLHttpRequest({xdomain:false});return null!=xhr.responseType}();function Polling(opts){var forceBase64=opts&&opts.forceBase64;if(!hasXHR2||forceBase64){this.supportsBinary=false}Transport.call(this,opts)}inherit(Polling,Transport);Polling.prototype.name=\"polling\";Polling.prototype.doOpen=function(){this.poll()};Polling.prototype.pause=function(onPause){var pending=0;var self=this;this.readyState=\"pausing\";function pause(){debug(\"paused\");self.readyState=\"paused\";onPause()}if(this.polling||!this.writable){var total=0;if(this.polling){debug(\"we are currently polling - waiting to pause\");total++;this.once(\"pollComplete\",function(){debug(\"pre-pause polling complete\");--total||pause()})}if(!this.writable){debug(\"we are currently writing - waiting to pause\");total++;this.once(\"drain\",function(){debug(\"pre-pause writing complete\");--total||pause()})}}else{pause()}};Polling.prototype.poll=function(){debug(\"polling\");this.polling=true;this.doPoll();this.emit(\"poll\")};Polling.prototype.onData=function(data){var self=this;debug(\"polling got data %s\",data);var callback=function(packet,index,total){if(\"opening\"==self.readyState){self.onOpen()}if(\"close\"==packet.type){self.onClose();return false}self.onPacket(packet)};parser.decodePayload(data,this.socket.binaryType,callback);if(\"closed\"!=this.readyState){this.polling=false;this.emit(\"pollComplete\");if(\"open\"==this.readyState){this.poll()}else{debug('ignoring poll - transport state \"%s\"',this.readyState)}}};Polling.prototype.doClose=function(){var self=this;function close(){debug(\"writing close packet\");self.write([{type:\"close\"}])}if(\"open\"==this.readyState){debug(\"transport open - closing\");close()}else{debug(\"transport not open - deferring close\");this.once(\"open\",close)}};Polling.prototype.write=function(packets){var self=this;this.writable=false;var callbackfn=function(){self.writable=true;self.emit(\"drain\")};var self=this;parser.encodePayload(packets,this.supportsBinary,function(data){self.doWrite(data,callbackfn)})};Polling.prototype.uri=function(){var query=this.query||{};var schema=this.secure?\"https\":\"http\";var port=\"\";if(false!==this.timestampRequests){query[this.timestampParam]=+new Date+\"-\"+Transport.timestamps++}if(!this.supportsBinary&&!query.sid){query.b64=1}query=parseqs.encode(query);if(this.port&&(\"https\"==schema&&this.port!=443||\"http\"==schema&&this.port!=80)){port=\":\"+this.port}if(query.length){query=\"?\"+query}return schema+\"://\"+this.hostname+port+this.path+query}},{\"../transport\":14,\"component-inherit\":21,debug:22,\"engine.io-parser\":25,parseqs:35,xmlhttprequest:20}],19:[function(_dereq_,module,exports){var Transport=_dereq_(\"../transport\");var parser=_dereq_(\"engine.io-parser\");var parseqs=_dereq_(\"parseqs\");var inherit=_dereq_(\"component-inherit\");var debug=_dereq_(\"debug\")(\"engine.io-client:websocket\");var WebSocket=_dereq_(\"ws\");module.exports=WS;function WS(opts){var forceBase64=opts&&opts.forceBase64;if(forceBase64){this.supportsBinary=false}Transport.call(this,opts)}inherit(WS,Transport);WS.prototype.name=\"websocket\";WS.prototype.supportsBinary=true;WS.prototype.doOpen=function(){if(!this.check()){return}var self=this;var uri=this.uri();var protocols=void 0;var opts={agent:this.agent};opts.pfx=this.pfx;opts.key=this.key;opts.passphrase=this.passphrase;opts.cert=this.cert;opts.ca=this.ca;opts.ciphers=this.ciphers;opts.rejectUnauthorized=this.rejectUnauthorized;this.ws=new WebSocket(uri,protocols,opts);if(this.ws.binaryType===undefined){this.supportsBinary=false}this.ws.binaryType=\"arraybuffer\";this.addEventListeners()};WS.prototype.addEventListeners=function(){var self=this;this.ws.onopen=function(){self.onOpen()};this.ws.onclose=function(){self.onClose()};this.ws.onmessage=function(ev){self.onData(ev.data)};this.ws.onerror=function(e){self.onError(\"websocket error\",e)}};if(\"undefined\"!=typeof navigator&&/iPad|iPhone|iPod/i.test(navigator.userAgent)){WS.prototype.onData=function(data){var self=this;setTimeout(function(){Transport.prototype.onData.call(self,data)},0)}}WS.prototype.write=function(packets){var self=this;this.writable=false;for(var i=0,l=packets.length;i<l;i++){parser.encodePacket(packets[i],this.supportsBinary,function(data){try{self.ws.send(data)}catch(e){debug(\"websocket closed before onclose event\")}})}function ondrain(){self.writable=true;self.emit(\"drain\")}setTimeout(ondrain,0)};WS.prototype.onClose=function(){Transport.prototype.onClose.call(this)};WS.prototype.doClose=function(){if(typeof this.ws!==\"undefined\"){this.ws.close()}};WS.prototype.uri=function(){var query=this.query||{};var schema=this.secure?\"wss\":\"ws\";var port=\"\";if(this.port&&(\"wss\"==schema&&this.port!=443||\"ws\"==schema&&this.port!=80)){port=\":\"+this.port}if(this.timestampRequests){query[this.timestampParam]=+new Date}if(!this.supportsBinary){query.b64=1}query=parseqs.encode(query);if(query.length){query=\"?\"+query}return schema+\"://\"+this.hostname+port+this.path+query};WS.prototype.check=function(){return!!WebSocket&&!(\"__initialize\"in WebSocket&&this.name===WS.prototype.name)}},{\"../transport\":14,\"component-inherit\":21,debug:22,\"engine.io-parser\":25,parseqs:35,ws:37}],20:[function(_dereq_,module,exports){var hasCORS=_dereq_(\"has-cors\");module.exports=function(opts){var xdomain=opts.xdomain;var xscheme=opts.xscheme;var enablesXDR=opts.enablesXDR;try{if(\"undefined\"!=typeof XMLHttpRequest&&(!xdomain||hasCORS)){return new XMLHttpRequest}}catch(e){}try{if(\"undefined\"!=typeof XDomainRequest&&!xscheme&&enablesXDR){return new XDomainRequest}}catch(e){}if(!xdomain){try{return new ActiveXObject(\"Microsoft.XMLHTTP\")}catch(e){}}}},{\"has-cors\":40}],21:[function(_dereq_,module,exports){module.exports=function(a,b){var fn=function(){};fn.prototype=b.prototype;a.prototype=new fn;a.prototype.constructor=a}},{}],22:[function(_dereq_,module,exports){exports=module.exports=_dereq_(\"./debug\");exports.log=log;exports.formatArgs=formatArgs;exports.save=save;exports.load=load;exports.useColors=useColors;exports.colors=[\"lightseagreen\",\"forestgreen\",\"goldenrod\",\"dodgerblue\",\"darkorchid\",\"crimson\"];function useColors(){return\"WebkitAppearance\"in document.documentElement.style||window.console&&(console.firebug||console.exception&&console.table)||navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31}exports.formatters.j=function(v){return JSON.stringify(v)};function formatArgs(){var args=arguments;var useColors=this.useColors;args[0]=(useColors?\"%c\":\"\")+this.namespace+(useColors?\" %c\":\" \")+args[0]+(useColors?\"%c \":\" \")+\"+\"+exports.humanize(this.diff);if(!useColors)return args;var c=\"color: \"+this.color;args=[args[0],c,\"color: inherit\"].concat(Array.prototype.slice.call(args,1));var index=0;var lastC=0;args[0].replace(/%[a-z%]/g,function(match){if(\"%\"===match)return;index++;if(\"%c\"===match){lastC=index}});args.splice(lastC,0,c);return args}function log(){return\"object\"==typeof console&&\"function\"==typeof console.log&&Function.prototype.apply.call(console.log,console,arguments)}function save(namespaces){try{if(null==namespaces){localStorage.removeItem(\"debug\")}else{localStorage.debug=namespaces}}catch(e){}}function load(){var r;try{r=localStorage.debug}catch(e){}return r}exports.enable(load())},{\"./debug\":23}],23:[function(_dereq_,module,exports){exports=module.exports=debug;exports.coerce=coerce;exports.disable=disable;exports.enable=enable;exports.enabled=enabled;exports.humanize=_dereq_(\"ms\");exports.names=[];exports.skips=[];exports.formatters={};var prevColor=0;var prevTime;function selectColor(){return exports.colors[prevColor++%exports.colors.length]}function debug(namespace){function disabled(){}disabled.enabled=false;function enabled(){var self=enabled;var curr=+new Date;var ms=curr-(prevTime||curr);self.diff=ms;self.prev=prevTime;self.curr=curr;prevTime=curr;if(null==self.useColors)self.useColors=exports.useColors();if(null==self.color&&self.useColors)self.color=selectColor();var args=Array.prototype.slice.call(arguments);args[0]=exports.coerce(args[0]);if(\"string\"!==typeof args[0]){args=[\"%o\"].concat(args)}var index=0;args[0]=args[0].replace(/%([a-z%])/g,function(match,format){if(match===\"%\")return match;index++;var formatter=exports.formatters[format];if(\"function\"===typeof formatter){var val=args[index];match=formatter.call(self,val);args.splice(index,1);index--}return match});if(\"function\"===typeof exports.formatArgs){args=exports.formatArgs.apply(self,args)}var logFn=enabled.log||exports.log||console.log.bind(console);logFn.apply(self,args)}enabled.enabled=true;var fn=exports.enabled(namespace)?enabled:disabled;fn.namespace=namespace;return fn}function enable(namespaces){exports.save(namespaces);var split=(namespaces||\"\").split(/[\\s,]+/);var len=split.length;for(var i=0;i<len;i++){if(!split[i])continue;namespaces=split[i].replace(/\\*/g,\".*?\");if(namespaces[0]===\"-\"){exports.skips.push(new RegExp(\"^\"+namespaces.substr(1)+\"$\"))}else{exports.names.push(new RegExp(\"^\"+namespaces+\"$\"))}}}function disable(){exports.enable(\"\")}function enabled(name){var i,len;for(i=0,len=exports.skips.length;i<len;i++){if(exports.skips[i].test(name)){return false}}for(i=0,len=exports.names.length;i<len;i++){if(exports.names[i].test(name)){return true}}return false}function coerce(val){if(val instanceof Error)return val.stack||val.message;return val}},{ms:24}],24:[function(_dereq_,module,exports){var s=1e3;var m=s*60;var h=m*60;var d=h*24;var y=d*365.25;module.exports=function(val,options){options=options||{};if(\"string\"==typeof val)return parse(val);return options.long?long(val):short(val)};function parse(str){var match=/^((?:\\d+)?\\.?\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i.exec(str);if(!match)return;var n=parseFloat(match[1]);var type=(match[2]||\"ms\").toLowerCase();switch(type){case\"years\":case\"year\":case\"y\":return n*y;case\"days\":case\"day\":case\"d\":return n*d;case\"hours\":case\"hour\":case\"h\":return n*h;case\"minutes\":case\"minute\":case\"m\":return n*m;case\"seconds\":case\"second\":case\"s\":return n*s;case\"ms\":return n}}function short(ms){if(ms>=d)return Math.round(ms/d)+\"d\";if(ms>=h)return Math.round(ms/h)+\"h\";if(ms>=m)return Math.round(ms/m)+\"m\";if(ms>=s)return Math.round(ms/s)+\"s\";return ms+\"ms\"}function long(ms){return plural(ms,d,\"day\")||plural(ms,h,\"hour\")||plural(ms,m,\"minute\")||plural(ms,s,\"second\")||ms+\" ms\"}function plural(ms,n,name){if(ms<n)return;if(ms<n*1.5)return Math.floor(ms/n)+\" \"+name;return Math.ceil(ms/n)+\" \"+name+\"s\"}},{}],25:[function(_dereq_,module,exports){(function(global){var keys=_dereq_(\"./keys\");var hasBinary=_dereq_(\"has-binary\");var sliceBuffer=_dereq_(\"arraybuffer.slice\");var base64encoder=_dereq_(\"base64-arraybuffer\");var after=_dereq_(\"after\");var utf8=_dereq_(\"utf8\");var isAndroid=navigator.userAgent.match(/Android/i);var isPhantomJS=/PhantomJS/i.test(navigator.userAgent);var dontSendBlobs=isAndroid||isPhantomJS;exports.protocol=3;var packets=exports.packets={open:0,close:1,ping:2,pong:3,message:4,upgrade:5,noop:6};var packetslist=keys(packets);var err={type:\"error\",data:\"parser error\"};var Blob=_dereq_(\"blob\");exports.encodePacket=function(packet,supportsBinary,utf8encode,callback){if(\"function\"==typeof supportsBinary){callback=supportsBinary;supportsBinary=false}if(\"function\"==typeof utf8encode){callback=utf8encode;utf8encode=null}var data=packet.data===undefined?undefined:packet.data.buffer||packet.data;if(global.ArrayBuffer&&data instanceof ArrayBuffer){return encodeArrayBuffer(packet,supportsBinary,callback)}else if(Blob&&data instanceof global.Blob){return encodeBlob(packet,supportsBinary,callback)}if(data&&data.base64){return encodeBase64Object(packet,callback)}var encoded=packets[packet.type];if(undefined!==packet.data){encoded+=utf8encode?utf8.encode(String(packet.data)):String(packet.data)}return callback(\"\"+encoded)};function encodeBase64Object(packet,callback){var message=\"b\"+exports.packets[packet.type]+packet.data.data;return callback(message)}function encodeArrayBuffer(packet,supportsBinary,callback){if(!supportsBinary){return exports.encodeBase64Packet(packet,callback)}var data=packet.data;var contentArray=new Uint8Array(data);var resultBuffer=new Uint8Array(1+data.byteLength);resultBuffer[0]=packets[packet.type];for(var i=0;i<contentArray.length;i++){resultBuffer[i+1]=contentArray[i]}return callback(resultBuffer.buffer)}function encodeBlobAsArrayBuffer(packet,supportsBinary,callback){if(!supportsBinary){return exports.encodeBase64Packet(packet,callback)}var fr=new FileReader;fr.onload=function(){packet.data=fr.result;exports.encodePacket(packet,supportsBinary,true,callback)};return fr.readAsArrayBuffer(packet.data)}function encodeBlob(packet,supportsBinary,callback){if(!supportsBinary){return exports.encodeBase64Packet(packet,callback)}if(dontSendBlobs){return encodeBlobAsArrayBuffer(packet,supportsBinary,callback)}var length=new Uint8Array(1);length[0]=packets[packet.type];var blob=new Blob([length.buffer,packet.data]);return callback(blob)}exports.encodeBase64Packet=function(packet,callback){var message=\"b\"+exports.packets[packet.type];if(Blob&&packet.data instanceof Blob){var fr=new FileReader;fr.onload=function(){var b64=fr.result.split(\",\")[1];callback(message+b64)};return fr.readAsDataURL(packet.data)}var b64data;try{b64data=String.fromCharCode.apply(null,new Uint8Array(packet.data))}catch(e){var typed=new Uint8Array(packet.data);var basic=new Array(typed.length);for(var i=0;i<typed.length;i++){basic[i]=typed[i]}b64data=String.fromCharCode.apply(null,basic)}message+=global.btoa(b64data);return callback(message)};exports.decodePacket=function(data,binaryType,utf8decode){if(typeof data==\"string\"||data===undefined){if(data.charAt(0)==\"b\"){return exports.decodeBase64Packet(data.substr(1),binaryType)}if(utf8decode){try{data=utf8.decode(data)}catch(e){return err}}var type=data.charAt(0);if(Number(type)!=type||!packetslist[type]){return err}if(data.length>1){return{type:packetslist[type],data:data.substring(1)}}else{return{type:packetslist[type]}}}var asArray=new Uint8Array(data);var type=asArray[0];var rest=sliceBuffer(data,1);if(Blob&&binaryType===\"blob\"){rest=new Blob([rest])}return{type:packetslist[type],data:rest}};exports.decodeBase64Packet=function(msg,binaryType){var type=packetslist[msg.charAt(0)];if(!global.ArrayBuffer){return{type:type,data:{base64:true,data:msg.substr(1)}}}var data=base64encoder.decode(msg.substr(1));if(binaryType===\"blob\"&&Blob){data=new Blob([data])}return{type:type,data:data}};exports.encodePayload=function(packets,supportsBinary,callback){if(typeof supportsBinary==\"function\"){callback=supportsBinary;supportsBinary=null}var isBinary=hasBinary(packets);if(supportsBinary&&isBinary){if(Blob&&!dontSendBlobs){return exports.encodePayloadAsBlob(packets,callback)}return exports.encodePayloadAsArrayBuffer(packets,callback)}if(!packets.length){return callback(\"0:\")}function setLengthHeader(message){return message.length+\":\"+message}function encodeOne(packet,doneCallback){exports.encodePacket(packet,!isBinary?false:supportsBinary,true,function(message){doneCallback(null,setLengthHeader(message))})}map(packets,encodeOne,function(err,results){return callback(results.join(\"\"))})};function map(ary,each,done){var result=new Array(ary.length);var next=after(ary.length,done);var eachWithIndex=function(i,el,cb){each(el,function(error,msg){result[i]=msg;cb(error,result)})};for(var i=0;i<ary.length;i++){eachWithIndex(i,ary[i],next)}}exports.decodePayload=function(data,binaryType,callback){if(typeof data!=\"string\"){return exports.decodePayloadAsBinary(data,binaryType,callback)}if(typeof binaryType===\"function\"){callback=binaryType;binaryType=null}var packet;if(data==\"\"){return callback(err,0,1)}var length=\"\",n,msg;for(var i=0,l=data.length;i<l;i++){var chr=data.charAt(i);if(\":\"!=chr){length+=chr}else{if(\"\"==length||length!=(n=Number(length))){return callback(err,0,1)}msg=data.substr(i+1,n);if(length!=msg.length){return callback(err,0,1)}if(msg.length){packet=exports.decodePacket(msg,binaryType,true);if(err.type==packet.type&&err.data==packet.data){return callback(err,0,1)}var ret=callback(packet,i+n,l);if(false===ret)return}i+=n;length=\"\"}}if(length!=\"\"){return callback(err,0,1)}};exports.encodePayloadAsArrayBuffer=function(packets,callback){if(!packets.length){return callback(new ArrayBuffer(0))}function encodeOne(packet,doneCallback){exports.encodePacket(packet,true,true,function(data){return doneCallback(null,data)})}map(packets,encodeOne,function(err,encodedPackets){var totalLength=encodedPackets.reduce(function(acc,p){var len;if(typeof p===\"string\"){len=p.length}else{len=p.byteLength}return acc+len.toString().length+len+2},0);var resultArray=new Uint8Array(totalLength);var bufferIndex=0;encodedPackets.forEach(function(p){var isString=typeof p===\"string\";var ab=p;if(isString){var view=new Uint8Array(p.length);for(var i=0;i<p.length;i++){view[i]=p.charCodeAt(i)}ab=view.buffer}if(isString){resultArray[bufferIndex++]=0}else{resultArray[bufferIndex++]=1}var lenStr=ab.byteLength.toString();for(var i=0;i<lenStr.length;i++){resultArray[bufferIndex++]=parseInt(lenStr[i])}resultArray[bufferIndex++]=255;var view=new Uint8Array(ab);for(var i=0;i<view.length;i++){resultArray[bufferIndex++]=view[i]}});return callback(resultArray.buffer)})};exports.encodePayloadAsBlob=function(packets,callback){function encodeOne(packet,doneCallback){exports.encodePacket(packet,true,true,function(encoded){var binaryIdentifier=new Uint8Array(1);binaryIdentifier[0]=1;if(typeof encoded===\"string\"){var view=new Uint8Array(encoded.length);for(var i=0;i<encoded.length;i++){view[i]=encoded.charCodeAt(i)}encoded=view.buffer;binaryIdentifier[0]=0}var len=encoded instanceof ArrayBuffer?encoded.byteLength:encoded.size;var lenStr=len.toString();var lengthAry=new Uint8Array(lenStr.length+1);for(var i=0;i<lenStr.length;i++){lengthAry[i]=parseInt(lenStr[i])}lengthAry[lenStr.length]=255;if(Blob){var blob=new Blob([binaryIdentifier.buffer,lengthAry.buffer,encoded]);doneCallback(null,blob)}})}map(packets,encodeOne,function(err,results){return callback(new Blob(results))})};exports.decodePayloadAsBinary=function(data,binaryType,callback){if(typeof binaryType===\"function\"){callback=binaryType;binaryType=null}var bufferTail=data;var buffers=[];var numberTooLong=false;while(bufferTail.byteLength>0){var tailArray=new Uint8Array(bufferTail);var isString=tailArray[0]===0;var msgLength=\"\";for(var i=1;;i++){if(tailArray[i]==255)break;if(msgLength.length>310){numberTooLong=true;break}msgLength+=tailArray[i]}if(numberTooLong)return callback(err,0,1);bufferTail=sliceBuffer(bufferTail,2+msgLength.length);msgLength=parseInt(msgLength);var msg=sliceBuffer(bufferTail,0,msgLength);if(isString){try{msg=String.fromCharCode.apply(null,new Uint8Array(msg))}catch(e){var typed=new Uint8Array(msg);msg=\"\";for(var i=0;i<typed.length;i++){msg+=String.fromCharCode(typed[i])}}}buffers.push(msg);bufferTail=sliceBuffer(bufferTail,msgLength)}var total=buffers.length;buffers.forEach(function(buffer,i){callback(exports.decodePacket(buffer,binaryType,true),i,total)})}}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{\"./keys\":26,after:27,\"arraybuffer.slice\":28,\"base64-arraybuffer\":29,blob:30,\"has-binary\":31,utf8:33}],26:[function(_dereq_,module,exports){module.exports=Object.keys||function keys(obj){var arr=[];var has=Object.prototype.hasOwnProperty;for(var i in obj){if(has.call(obj,i)){arr.push(i)}}return arr}},{}],27:[function(_dereq_,module,exports){module.exports=after;function after(count,callback,err_cb){var bail=false;err_cb=err_cb||noop;proxy.count=count;return count===0?callback():proxy;function proxy(err,result){if(proxy.count<=0){throw new Error(\"after called too many times\")}--proxy.count;if(err){bail=true;callback(err);callback=err_cb}else if(proxy.count===0&&!bail){callback(null,result)}}}function noop(){}},{}],28:[function(_dereq_,module,exports){module.exports=function(arraybuffer,start,end){var bytes=arraybuffer.byteLength;start=start||0;end=end||bytes;if(arraybuffer.slice){return arraybuffer.slice(start,end)}if(start<0){start+=bytes}if(end<0){end+=bytes}if(end>bytes){end=bytes}if(start>=bytes||start>=end||bytes===0){return new ArrayBuffer(0)}var abv=new Uint8Array(arraybuffer);var result=new Uint8Array(end-start);for(var i=start,ii=0;i<end;i++,ii++){result[ii]=abv[i]}return result.buffer}},{}],29:[function(_dereq_,module,exports){(function(chars){\"use strict\";exports.encode=function(arraybuffer){var bytes=new Uint8Array(arraybuffer),i,len=bytes.length,base64=\"\";for(i=0;i<len;i+=3){base64+=chars[bytes[i]>>2];base64+=chars[(bytes[i]&3)<<4|bytes[i+1]>>4];base64+=chars[(bytes[i+1]&15)<<2|bytes[i+2]>>6];base64+=chars[bytes[i+2]&63]}if(len%3===2){base64=base64.substring(0,base64.length-1)+\"=\"}else if(len%3===1){base64=base64.substring(0,base64.length-2)+\"==\"}return base64};exports.decode=function(base64){var bufferLength=base64.length*.75,len=base64.length,i,p=0,encoded1,encoded2,encoded3,encoded4;if(base64[base64.length-1]===\"=\"){bufferLength--;if(base64[base64.length-2]===\"=\"){bufferLength--}}var arraybuffer=new ArrayBuffer(bufferLength),bytes=new Uint8Array(arraybuffer);for(i=0;i<len;i+=4){encoded1=chars.indexOf(base64[i]);encoded2=chars.indexOf(base64[i+1]);encoded3=chars.indexOf(base64[i+2]);encoded4=chars.indexOf(base64[i+3]);bytes[p++]=encoded1<<2|encoded2>>4;bytes[p++]=(encoded2&15)<<4|encoded3>>2;bytes[p++]=(encoded3&3)<<6|encoded4&63}return arraybuffer}})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\")},{}],30:[function(_dereq_,module,exports){(function(global){var BlobBuilder=global.BlobBuilder||global.WebKitBlobBuilder||global.MSBlobBuilder||global.MozBlobBuilder;var blobSupported=function(){try{var b=new Blob([\"hi\"]);return b.size==2}catch(e){return false}}();var blobBuilderSupported=BlobBuilder&&BlobBuilder.prototype.append&&BlobBuilder.prototype.getBlob;function BlobBuilderConstructor(ary,options){options=options||{};var bb=new BlobBuilder;for(var i=0;i<ary.length;i++){bb.append(ary[i])}return options.type?bb.getBlob(options.type):bb.getBlob()}module.exports=function(){if(blobSupported){return global.Blob}else if(blobBuilderSupported){return BlobBuilderConstructor}else{return undefined}}()}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{}],31:[function(_dereq_,module,exports){(function(global){var isArray=_dereq_(\"isarray\");module.exports=hasBinary;function hasBinary(data){function _hasBinary(obj){if(!obj)return false;if(global.Buffer&&global.Buffer.isBuffer(obj)||global.ArrayBuffer&&obj instanceof ArrayBuffer||global.Blob&&obj instanceof Blob||global.File&&obj instanceof File){return true}if(isArray(obj)){for(var i=0;i<obj.length;i++){if(_hasBinary(obj[i])){return true}}}else if(obj&&\"object\"==typeof obj){if(obj.toJSON){obj=obj.toJSON()}for(var key in obj){if(obj.hasOwnProperty(key)&&_hasBinary(obj[key])){return true}}}return false}return _hasBinary(data)}}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{isarray:32}],32:[function(_dereq_,module,exports){module.exports=Array.isArray||function(arr){return Object.prototype.toString.call(arr)==\"[object Array]\"}},{}],33:[function(_dereq_,module,exports){(function(global){(function(root){var freeExports=typeof exports==\"object\"&&exports;var freeModule=typeof module==\"object\"&&module&&module.exports==freeExports&&module;var freeGlobal=typeof global==\"object\"&&global;if(freeGlobal.global===freeGlobal||freeGlobal.window===freeGlobal){root=freeGlobal}var stringFromCharCode=String.fromCharCode;function ucs2decode(string){var output=[];var counter=0;var length=string.length;var value;var extra;while(counter<length){value=string.charCodeAt(counter++);if(value>=55296&&value<=56319&&counter<length){extra=string.charCodeAt(counter++);if((extra&64512)==56320){output.push(((value&1023)<<10)+(extra&1023)+65536)}else{output.push(value);counter--}}else{output.push(value)}}return output}function ucs2encode(array){var length=array.length;var index=-1;var value;var output=\"\";while(++index<length){value=array[index];if(value>65535){value-=65536;\noutput+=stringFromCharCode(value>>>10&1023|55296);value=56320|value&1023}output+=stringFromCharCode(value)}return output}function createByte(codePoint,shift){return stringFromCharCode(codePoint>>shift&63|128)}function encodeCodePoint(codePoint){if((codePoint&4294967168)==0){return stringFromCharCode(codePoint)}var symbol=\"\";if((codePoint&4294965248)==0){symbol=stringFromCharCode(codePoint>>6&31|192)}else if((codePoint&4294901760)==0){symbol=stringFromCharCode(codePoint>>12&15|224);symbol+=createByte(codePoint,6)}else if((codePoint&4292870144)==0){symbol=stringFromCharCode(codePoint>>18&7|240);symbol+=createByte(codePoint,12);symbol+=createByte(codePoint,6)}symbol+=stringFromCharCode(codePoint&63|128);return symbol}function utf8encode(string){var codePoints=ucs2decode(string);var length=codePoints.length;var index=-1;var codePoint;var byteString=\"\";while(++index<length){codePoint=codePoints[index];byteString+=encodeCodePoint(codePoint)}return byteString}function readContinuationByte(){if(byteIndex>=byteCount){throw Error(\"Invalid byte index\")}var continuationByte=byteArray[byteIndex]&255;byteIndex++;if((continuationByte&192)==128){return continuationByte&63}throw Error(\"Invalid continuation byte\")}function decodeSymbol(){var byte1;var byte2;var byte3;var byte4;var codePoint;if(byteIndex>byteCount){throw Error(\"Invalid byte index\")}if(byteIndex==byteCount){return false}byte1=byteArray[byteIndex]&255;byteIndex++;if((byte1&128)==0){return byte1}if((byte1&224)==192){var byte2=readContinuationByte();codePoint=(byte1&31)<<6|byte2;if(codePoint>=128){return codePoint}else{throw Error(\"Invalid continuation byte\")}}if((byte1&240)==224){byte2=readContinuationByte();byte3=readContinuationByte();codePoint=(byte1&15)<<12|byte2<<6|byte3;if(codePoint>=2048){return codePoint}else{throw Error(\"Invalid continuation byte\")}}if((byte1&248)==240){byte2=readContinuationByte();byte3=readContinuationByte();byte4=readContinuationByte();codePoint=(byte1&15)<<18|byte2<<12|byte3<<6|byte4;if(codePoint>=65536&&codePoint<=1114111){return codePoint}}throw Error(\"Invalid UTF-8 detected\")}var byteArray;var byteCount;var byteIndex;function utf8decode(byteString){byteArray=ucs2decode(byteString);byteCount=byteArray.length;byteIndex=0;var codePoints=[];var tmp;while((tmp=decodeSymbol())!==false){codePoints.push(tmp)}return ucs2encode(codePoints)}var utf8={version:\"2.0.0\",encode:utf8encode,decode:utf8decode};if(typeof define==\"function\"&&typeof define.amd==\"object\"&&define.amd){define(function(){return utf8})}else if(freeExports&&!freeExports.nodeType){if(freeModule){freeModule.exports=utf8}else{var object={};var hasOwnProperty=object.hasOwnProperty;for(var key in utf8){hasOwnProperty.call(utf8,key)&&(freeExports[key]=utf8[key])}}}else{root.utf8=utf8}})(this)}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{}],34:[function(_dereq_,module,exports){(function(global){var rvalidchars=/^[\\],:{}\\s]*$/;var rvalidescape=/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;var rvalidtokens=/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;var rvalidbraces=/(?:^|:|,)(?:\\s*\\[)+/g;var rtrimLeft=/^\\s+/;var rtrimRight=/\\s+$/;module.exports=function parsejson(data){if(\"string\"!=typeof data||!data){return null}data=data.replace(rtrimLeft,\"\").replace(rtrimRight,\"\");if(global.JSON&&JSON.parse){return JSON.parse(data)}if(rvalidchars.test(data.replace(rvalidescape,\"@\").replace(rvalidtokens,\"]\").replace(rvalidbraces,\"\"))){return new Function(\"return \"+data)()}}}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{}],35:[function(_dereq_,module,exports){exports.encode=function(obj){var str=\"\";for(var i in obj){if(obj.hasOwnProperty(i)){if(str.length)str+=\"&\";str+=encodeURIComponent(i)+\"=\"+encodeURIComponent(obj[i])}}return str};exports.decode=function(qs){var qry={};var pairs=qs.split(\"&\");for(var i=0,l=pairs.length;i<l;i++){var pair=pairs[i].split(\"=\");qry[decodeURIComponent(pair[0])]=decodeURIComponent(pair[1])}return qry}},{}],36:[function(_dereq_,module,exports){var re=/^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;var parts=[\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"];module.exports=function parseuri(str){var src=str,b=str.indexOf(\"[\"),e=str.indexOf(\"]\");if(b!=-1&&e!=-1){str=str.substring(0,b)+str.substring(b,e).replace(/:/g,\";\")+str.substring(e,str.length)}var m=re.exec(str||\"\"),uri={},i=14;while(i--){uri[parts[i]]=m[i]||\"\"}if(b!=-1&&e!=-1){uri.source=src;uri.host=uri.host.substring(1,uri.host.length-1).replace(/;/g,\":\");uri.authority=uri.authority.replace(\"[\",\"\").replace(\"]\",\"\").replace(/;/g,\":\");uri.ipv6uri=true}return uri}},{}],37:[function(_dereq_,module,exports){var global=function(){return this}();var WebSocket=global.WebSocket||global.MozWebSocket;module.exports=WebSocket?ws:null;function ws(uri,protocols,opts){var instance;if(protocols){instance=new WebSocket(uri,protocols)}else{instance=new WebSocket(uri)}return instance}if(WebSocket)ws.prototype=WebSocket.prototype},{}],38:[function(_dereq_,module,exports){(function(global){var isArray=_dereq_(\"isarray\");module.exports=hasBinary;function hasBinary(data){function _hasBinary(obj){if(!obj)return false;if(global.Buffer&&global.Buffer.isBuffer(obj)||global.ArrayBuffer&&obj instanceof ArrayBuffer||global.Blob&&obj instanceof Blob||global.File&&obj instanceof File){return true}if(isArray(obj)){for(var i=0;i<obj.length;i++){if(_hasBinary(obj[i])){return true}}}else if(obj&&\"object\"==typeof obj){if(obj.toJSON){obj=obj.toJSON()}for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)&&_hasBinary(obj[key])){return true}}}return false}return _hasBinary(data)}}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{isarray:39}],39:[function(_dereq_,module,exports){module.exports=_dereq_(32)},{}],40:[function(_dereq_,module,exports){var global=_dereq_(\"global\");try{module.exports=\"XMLHttpRequest\"in global&&\"withCredentials\"in new global.XMLHttpRequest}catch(err){module.exports=false}},{global:41}],41:[function(_dereq_,module,exports){module.exports=function(){return this}()},{}],42:[function(_dereq_,module,exports){var indexOf=[].indexOf;module.exports=function(arr,obj){if(indexOf)return arr.indexOf(obj);for(var i=0;i<arr.length;++i){if(arr[i]===obj)return i}return-1}},{}],43:[function(_dereq_,module,exports){var has=Object.prototype.hasOwnProperty;exports.keys=Object.keys||function(obj){var keys=[];for(var key in obj){if(has.call(obj,key)){keys.push(key)}}return keys};exports.values=function(obj){var vals=[];for(var key in obj){if(has.call(obj,key)){vals.push(obj[key])}}return vals};exports.merge=function(a,b){for(var key in b){if(has.call(b,key)){a[key]=b[key]}}return a};exports.length=function(obj){return exports.keys(obj).length};exports.isEmpty=function(obj){return 0==exports.length(obj)}},{}],44:[function(_dereq_,module,exports){var re=/^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;var parts=[\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"];module.exports=function parseuri(str){var m=re.exec(str||\"\"),uri={},i=14;while(i--){uri[parts[i]]=m[i]||\"\"}return uri}},{}],45:[function(_dereq_,module,exports){(function(global){var isArray=_dereq_(\"isarray\");var isBuf=_dereq_(\"./is-buffer\");exports.deconstructPacket=function(packet){var buffers=[];var packetData=packet.data;function _deconstructPacket(data){if(!data)return data;if(isBuf(data)){var placeholder={_placeholder:true,num:buffers.length};buffers.push(data);return placeholder}else if(isArray(data)){var newData=new Array(data.length);for(var i=0;i<data.length;i++){newData[i]=_deconstructPacket(data[i])}return newData}else if(\"object\"==typeof data&&!(data instanceof Date)){var newData={};for(var key in data){newData[key]=_deconstructPacket(data[key])}return newData}return data}var pack=packet;pack.data=_deconstructPacket(packetData);pack.attachments=buffers.length;return{packet:pack,buffers:buffers}};exports.reconstructPacket=function(packet,buffers){var curPlaceHolder=0;function _reconstructPacket(data){if(data&&data._placeholder){var buf=buffers[data.num];return buf}else if(isArray(data)){for(var i=0;i<data.length;i++){data[i]=_reconstructPacket(data[i])}return data}else if(data&&\"object\"==typeof data){for(var key in data){data[key]=_reconstructPacket(data[key])}return data}return data}packet.data=_reconstructPacket(packet.data);packet.attachments=undefined;return packet};exports.removeBlobs=function(data,callback){function _removeBlobs(obj,curKey,containingObject){if(!obj)return obj;if(global.Blob&&obj instanceof Blob||global.File&&obj instanceof File){pendingBlobs++;var fileReader=new FileReader;fileReader.onload=function(){if(containingObject){containingObject[curKey]=this.result}else{bloblessData=this.result}if(!--pendingBlobs){callback(bloblessData)}};fileReader.readAsArrayBuffer(obj)}else if(isArray(obj)){for(var i=0;i<obj.length;i++){_removeBlobs(obj[i],i,obj)}}else if(obj&&\"object\"==typeof obj&&!isBuf(obj)){for(var key in obj){_removeBlobs(obj[key],key,obj)}}}var pendingBlobs=0;var bloblessData=data;_removeBlobs(bloblessData);if(!pendingBlobs){callback(bloblessData)}}}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{\"./is-buffer\":47,isarray:48}],46:[function(_dereq_,module,exports){var debug=_dereq_(\"debug\")(\"socket.io-parser\");var json=_dereq_(\"json3\");var isArray=_dereq_(\"isarray\");var Emitter=_dereq_(\"component-emitter\");var binary=_dereq_(\"./binary\");var isBuf=_dereq_(\"./is-buffer\");exports.protocol=4;exports.types=[\"CONNECT\",\"DISCONNECT\",\"EVENT\",\"BINARY_EVENT\",\"ACK\",\"BINARY_ACK\",\"ERROR\"];exports.CONNECT=0;exports.DISCONNECT=1;exports.EVENT=2;exports.ACK=3;exports.ERROR=4;exports.BINARY_EVENT=5;exports.BINARY_ACK=6;exports.Encoder=Encoder;exports.Decoder=Decoder;function Encoder(){}Encoder.prototype.encode=function(obj,callback){debug(\"encoding packet %j\",obj);if(exports.BINARY_EVENT==obj.type||exports.BINARY_ACK==obj.type){encodeAsBinary(obj,callback)}else{var encoding=encodeAsString(obj);callback([encoding])}};function encodeAsString(obj){var str=\"\";var nsp=false;str+=obj.type;if(exports.BINARY_EVENT==obj.type||exports.BINARY_ACK==obj.type){str+=obj.attachments;str+=\"-\"}if(obj.nsp&&\"/\"!=obj.nsp){nsp=true;str+=obj.nsp}if(null!=obj.id){if(nsp){str+=\",\";nsp=false}str+=obj.id}if(null!=obj.data){if(nsp)str+=\",\";str+=json.stringify(obj.data)}debug(\"encoded %j as %s\",obj,str);return str}function encodeAsBinary(obj,callback){function writeEncoding(bloblessData){var deconstruction=binary.deconstructPacket(bloblessData);var pack=encodeAsString(deconstruction.packet);var buffers=deconstruction.buffers;buffers.unshift(pack);callback(buffers)}binary.removeBlobs(obj,writeEncoding)}function Decoder(){this.reconstructor=null}Emitter(Decoder.prototype);Decoder.prototype.add=function(obj){var packet;if(\"string\"==typeof obj){packet=decodeString(obj);if(exports.BINARY_EVENT==packet.type||exports.BINARY_ACK==packet.type){this.reconstructor=new BinaryReconstructor(packet);if(this.reconstructor.reconPack.attachments===0){this.emit(\"decoded\",packet)}}else{this.emit(\"decoded\",packet)}}else if(isBuf(obj)||obj.base64){if(!this.reconstructor){throw new Error(\"got binary data when not reconstructing a packet\")}else{packet=this.reconstructor.takeBinaryData(obj);if(packet){this.reconstructor=null;this.emit(\"decoded\",packet)}}}else{throw new Error(\"Unknown type: \"+obj)}};function decodeString(str){var p={};var i=0;p.type=Number(str.charAt(0));if(null==exports.types[p.type])return error();if(exports.BINARY_EVENT==p.type||exports.BINARY_ACK==p.type){var buf=\"\";while(str.charAt(++i)!=\"-\"){buf+=str.charAt(i);if(i==str.length)break}if(buf!=Number(buf)||str.charAt(i)!=\"-\"){throw new Error(\"Illegal attachments\")}p.attachments=Number(buf)}if(\"/\"==str.charAt(i+1)){p.nsp=\"\";while(++i){var c=str.charAt(i);if(\",\"==c)break;p.nsp+=c;if(i==str.length)break}}else{p.nsp=\"/\"}var next=str.charAt(i+1);if(\"\"!==next&&Number(next)==next){p.id=\"\";while(++i){var c=str.charAt(i);if(null==c||Number(c)!=c){--i;break}p.id+=str.charAt(i);if(i==str.length)break}p.id=Number(p.id)}if(str.charAt(++i)){try{p.data=json.parse(str.substr(i))}catch(e){return error()}}debug(\"decoded %s as %j\",str,p);return p}Decoder.prototype.destroy=function(){if(this.reconstructor){this.reconstructor.finishedReconstruction()}};function BinaryReconstructor(packet){this.reconPack=packet;this.buffers=[]}BinaryReconstructor.prototype.takeBinaryData=function(binData){this.buffers.push(binData);if(this.buffers.length==this.reconPack.attachments){var packet=binary.reconstructPacket(this.reconPack,this.buffers);this.finishedReconstruction();return packet}return null};BinaryReconstructor.prototype.finishedReconstruction=function(){this.reconPack=null;this.buffers=[]};function error(data){return{type:exports.ERROR,data:\"parser error\"}}},{\"./binary\":45,\"./is-buffer\":47,\"component-emitter\":9,debug:10,isarray:48,json3:49}],47:[function(_dereq_,module,exports){(function(global){module.exports=isBuf;function isBuf(obj){return global.Buffer&&global.Buffer.isBuffer(obj)||global.ArrayBuffer&&obj instanceof ArrayBuffer}}).call(this,typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{})},{}],48:[function(_dereq_,module,exports){module.exports=_dereq_(32)},{}],49:[function(_dereq_,module,exports){(function(window){var getClass={}.toString,isProperty,forEach,undef;var isLoader=typeof define===\"function\"&&define.amd;var nativeJSON=typeof JSON==\"object\"&&JSON;var JSON3=typeof exports==\"object\"&&exports&&!exports.nodeType&&exports;if(JSON3&&nativeJSON){JSON3.stringify=nativeJSON.stringify;JSON3.parse=nativeJSON.parse}else{JSON3=window.JSON=nativeJSON||{}}var isExtended=new Date(-0xc782b5b800cec);try{isExtended=isExtended.getUTCFullYear()==-109252&&isExtended.getUTCMonth()===0&&isExtended.getUTCDate()===1&&isExtended.getUTCHours()==10&&isExtended.getUTCMinutes()==37&&isExtended.getUTCSeconds()==6&&isExtended.getUTCMilliseconds()==708}catch(exception){}function has(name){if(has[name]!==undef){return has[name]}var isSupported;if(name==\"bug-string-char-index\"){isSupported=\"a\"[0]!=\"a\"}else if(name==\"json\"){isSupported=has(\"json-stringify\")&&has(\"json-parse\")}else{var value,serialized='{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';if(name==\"json-stringify\"){var stringify=JSON3.stringify,stringifySupported=typeof stringify==\"function\"&&isExtended;if(stringifySupported){(value=function(){return 1}).toJSON=value;try{stringifySupported=stringify(0)===\"0\"&&stringify(new Number)===\"0\"&&stringify(new String)=='\"\"'&&stringify(getClass)===undef&&stringify(undef)===undef&&stringify()===undef&&stringify(value)===\"1\"&&stringify([value])==\"[1]\"&&stringify([undef])==\"[null]\"&&stringify(null)==\"null\"&&stringify([undef,getClass,null])==\"[null,null,null]\"&&stringify({a:[value,true,false,null,\"\\x00\\b\\n\\f\\r\t\"]})==serialized&&stringify(null,value)===\"1\"&&stringify([1,2],null,1)==\"[\\n 1,\\n 2\\n]\"&&stringify(new Date(-864e13))=='\"-271821-04-20T00:00:00.000Z\"'&&stringify(new Date(864e13))=='\"+275760-09-13T00:00:00.000Z\"'&&stringify(new Date(-621987552e5))=='\"-000001-01-01T00:00:00.000Z\"'&&stringify(new Date(-1))=='\"1969-12-31T23:59:59.999Z\"'}catch(exception){stringifySupported=false}}isSupported=stringifySupported}if(name==\"json-parse\"){var parse=JSON3.parse;if(typeof parse==\"function\"){try{if(parse(\"0\")===0&&!parse(false)){value=parse(serialized);var parseSupported=value[\"a\"].length==5&&value[\"a\"][0]===1;if(parseSupported){try{parseSupported=!parse('\"\t\"')}catch(exception){}if(parseSupported){try{parseSupported=parse(\"01\")!==1}catch(exception){}}if(parseSupported){try{parseSupported=parse(\"1.\")!==1}catch(exception){}}}}}catch(exception){parseSupported=false}}isSupported=parseSupported}}return has[name]=!!isSupported}if(!has(\"json\")){var functionClass=\"[object Function]\";var dateClass=\"[object Date]\";var numberClass=\"[object Number]\";var stringClass=\"[object String]\";var arrayClass=\"[object Array]\";var booleanClass=\"[object Boolean]\";var charIndexBuggy=has(\"bug-string-char-index\");if(!isExtended){var floor=Math.floor;var Months=[0,31,59,90,120,151,181,212,243,273,304,334];var getDay=function(year,month){return Months[month]+365*(year-1970)+floor((year-1969+(month=+(month>1)))/4)-floor((year-1901+month)/100)+floor((year-1601+month)/400)}}if(!(isProperty={}.hasOwnProperty)){isProperty=function(property){var members={},constructor;if((members.__proto__=null,members.__proto__={toString:1},members).toString!=getClass){isProperty=function(property){var original=this.__proto__,result=property in(this.__proto__=null,this);this.__proto__=original;return result}}else{constructor=members.constructor;isProperty=function(property){var parent=(this.constructor||constructor).prototype;return property in this&&!(property in parent&&this[property]===parent[property])}}members=null;return isProperty.call(this,property)}}var PrimitiveTypes={\"boolean\":1,number:1,string:1,undefined:1};var isHostType=function(object,property){var type=typeof object[property];return type==\"object\"?!!object[property]:!PrimitiveTypes[type]};forEach=function(object,callback){var size=0,Properties,members,property;(Properties=function(){this.valueOf=0}).prototype.valueOf=0;members=new Properties;for(property in members){if(isProperty.call(members,property)){size++}}Properties=members=null;if(!size){members=[\"valueOf\",\"toString\",\"toLocaleString\",\"propertyIsEnumerable\",\"isPrototypeOf\",\"hasOwnProperty\",\"constructor\"];forEach=function(object,callback){var isFunction=getClass.call(object)==functionClass,property,length;var hasProperty=!isFunction&&typeof object.constructor!=\"function\"&&isHostType(object,\"hasOwnProperty\")?object.hasOwnProperty:isProperty;for(property in object){if(!(isFunction&&property==\"prototype\")&&hasProperty.call(object,property)){callback(property)}}for(length=members.length;property=members[--length];hasProperty.call(object,property)&&callback(property));}}else if(size==2){forEach=function(object,callback){var members={},isFunction=getClass.call(object)==functionClass,property;for(property in object){if(!(isFunction&&property==\"prototype\")&&!isProperty.call(members,property)&&(members[property]=1)&&isProperty.call(object,property)){callback(property)}}}}else{forEach=function(object,callback){var isFunction=getClass.call(object)==functionClass,property,isConstructor;for(property in object){if(!(isFunction&&property==\"prototype\")&&isProperty.call(object,property)&&!(isConstructor=property===\"constructor\")){callback(property)}}if(isConstructor||isProperty.call(object,property=\"constructor\")){callback(property)}}}return forEach(object,callback)};if(!has(\"json-stringify\")){var Escapes={92:\"\\\\\\\\\",34:'\\\\\"',8:\"\\\\b\",12:\"\\\\f\",10:\"\\\\n\",13:\"\\\\r\",9:\"\\\\t\"};var leadingZeroes=\"000000\";var toPaddedString=function(width,value){return(leadingZeroes+(value||0)).slice(-width)};var unicodePrefix=\"\\\\u00\";var quote=function(value){var result='\"',index=0,length=value.length,isLarge=length>10&&charIndexBuggy,symbols;if(isLarge){symbols=value.split(\"\")}for(;index<length;index++){var charCode=value.charCodeAt(index);switch(charCode){case 8:case 9:case 10:case 12:case 13:case 34:case 92:result+=Escapes[charCode];break;default:if(charCode<32){result+=unicodePrefix+toPaddedString(2,charCode.toString(16));break}result+=isLarge?symbols[index]:charIndexBuggy?value.charAt(index):value[index]}}return result+'\"'};var serialize=function(property,object,callback,properties,whitespace,indentation,stack){var value,className,year,month,date,time,hours,minutes,seconds,milliseconds,results,element,index,length,prefix,result;try{value=object[property]}catch(exception){}if(typeof value==\"object\"&&value){className=getClass.call(value);if(className==dateClass&&!isProperty.call(value,\"toJSON\")){if(value>-1/0&&value<1/0){if(getDay){date=floor(value/864e5);for(year=floor(date/365.2425)+1970-1;getDay(year+1,0)<=date;year++);for(month=floor((date-getDay(year,0))/30.42);getDay(year,month+1)<=date;month++);date=1+date-getDay(year,month);time=(value%864e5+864e5)%864e5;hours=floor(time/36e5)%24;minutes=floor(time/6e4)%60;seconds=floor(time/1e3)%60;milliseconds=time%1e3}else{year=value.getUTCFullYear();month=value.getUTCMonth();date=value.getUTCDate();hours=value.getUTCHours();minutes=value.getUTCMinutes();seconds=value.getUTCSeconds();milliseconds=value.getUTCMilliseconds()}value=(year<=0||year>=1e4?(year<0?\"-\":\"+\")+toPaddedString(6,year<0?-year:year):toPaddedString(4,year))+\"-\"+toPaddedString(2,month+1)+\"-\"+toPaddedString(2,date)+\"T\"+toPaddedString(2,hours)+\":\"+toPaddedString(2,minutes)+\":\"+toPaddedString(2,seconds)+\".\"+toPaddedString(3,milliseconds)+\"Z\"}else{value=null}}else if(typeof value.toJSON==\"function\"&&(className!=numberClass&&className!=stringClass&&className!=arrayClass||isProperty.call(value,\"toJSON\"))){value=value.toJSON(property)}}if(callback){value=callback.call(object,property,value)}if(value===null){return\"null\"}className=getClass.call(value);if(className==booleanClass){return\"\"+value}else if(className==numberClass){return value>-1/0&&value<1/0?\"\"+value:\"null\"}else if(className==stringClass){return quote(\"\"+value)}if(typeof value==\"object\"){for(length=stack.length;length--;){if(stack[length]===value){throw TypeError()}}stack.push(value);results=[];prefix=indentation;indentation+=whitespace;if(className==arrayClass){for(index=0,length=value.length;index<length;index++){element=serialize(index,value,callback,properties,whitespace,indentation,stack);results.push(element===undef?\"null\":element)}result=results.length?whitespace?\"[\\n\"+indentation+results.join(\",\\n\"+indentation)+\"\\n\"+prefix+\"]\":\"[\"+results.join(\",\")+\"]\":\"[]\"}else{forEach(properties||value,function(property){var element=serialize(property,value,callback,properties,whitespace,indentation,stack);if(element!==undef){results.push(quote(property)+\":\"+(whitespace?\" \":\"\")+element)}});result=results.length?whitespace?\"{\\n\"+indentation+results.join(\",\\n\"+indentation)+\"\\n\"+prefix+\"}\":\"{\"+results.join(\",\")+\"}\":\"{}\"}stack.pop();return result}};JSON3.stringify=function(source,filter,width){var whitespace,callback,properties,className;if(typeof filter==\"function\"||typeof filter==\"object\"&&filter){if((className=getClass.call(filter))==functionClass){callback=filter}else if(className==arrayClass){properties={};for(var index=0,length=filter.length,value;index<length;value=filter[index++],(className=getClass.call(value),className==stringClass||className==numberClass)&&(properties[value]=1));}}if(width){if((className=getClass.call(width))==numberClass){if((width-=width%1)>0){for(whitespace=\"\",width>10&&(width=10);whitespace.length<width;whitespace+=\" \");}}else if(className==stringClass){whitespace=width.length<=10?width:width.slice(0,10)}}return serialize(\"\",(value={},value[\"\"]=source,value),callback,properties,whitespace,\"\",[])}}if(!has(\"json-parse\")){var fromCharCode=String.fromCharCode;var Unescapes={92:\"\\\\\",34:'\"',47:\"/\",98:\"\\b\",116:\"\t\",110:\"\\n\",102:\"\\f\",114:\"\\r\"};var Index,Source;var abort=function(){Index=Source=null;throw SyntaxError()};var lex=function(){var source=Source,length=source.length,value,begin,position,isSigned,charCode;while(Index<length){charCode=source.charCodeAt(Index);switch(charCode){case 9:case 10:case 13:case 32:Index++;break;case 123:case 125:case 91:case 93:case 58:case 44:value=charIndexBuggy?source.charAt(Index):source[Index];Index++;return value;case 34:for(value=\"@\",Index++;Index<length;){charCode=source.charCodeAt(Index);if(charCode<32){abort()}else if(charCode==92){charCode=source.charCodeAt(++Index);switch(charCode){case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:value+=Unescapes[charCode];Index++;break;case 117:begin=++Index;for(position=Index+4;Index<position;Index++){charCode=source.charCodeAt(Index);if(!(charCode>=48&&charCode<=57||charCode>=97&&charCode<=102||charCode>=65&&charCode<=70)){abort()}}value+=fromCharCode(\"0x\"+source.slice(begin,Index));break;default:abort()}}else{if(charCode==34){break}charCode=source.charCodeAt(Index);begin=Index;while(charCode>=32&&charCode!=92&&charCode!=34){charCode=source.charCodeAt(++Index)}value+=source.slice(begin,Index)}}if(source.charCodeAt(Index)==34){Index++;return value}abort();default:begin=Index;if(charCode==45){isSigned=true;charCode=source.charCodeAt(++Index)}if(charCode>=48&&charCode<=57){if(charCode==48&&(charCode=source.charCodeAt(Index+1),charCode>=48&&charCode<=57)){abort()}isSigned=false;for(;Index<length&&(charCode=source.charCodeAt(Index),charCode>=48&&charCode<=57);Index++);if(source.charCodeAt(Index)==46){position=++Index;for(;position<length&&(charCode=source.charCodeAt(position),charCode>=48&&charCode<=57);position++);if(position==Index){abort()}Index=position}charCode=source.charCodeAt(Index);if(charCode==101||charCode==69){charCode=source.charCodeAt(++Index);if(charCode==43||charCode==45){Index++}for(position=Index;position<length&&(charCode=source.charCodeAt(position),charCode>=48&&charCode<=57);position++);if(position==Index){abort()}Index=position}return+source.slice(begin,Index)}if(isSigned){abort()}if(source.slice(Index,Index+4)==\"true\"){Index+=4;return true}else if(source.slice(Index,Index+5)==\"false\"){Index+=5;return false}else if(source.slice(Index,Index+4)==\"null\"){Index+=4;return null}abort()}}return\"$\"};var get=function(value){var results,hasMembers;if(value==\"$\"){abort()}if(typeof value==\"string\"){if((charIndexBuggy?value.charAt(0):value[0])==\"@\"){return value.slice(1)}if(value==\"[\"){results=[];for(;;hasMembers||(hasMembers=true)){value=lex();if(value==\"]\"){break}if(hasMembers){if(value==\",\"){value=lex();if(value==\"]\"){abort()}}else{abort()}}if(value==\",\"){abort()}results.push(get(value))}return results}else if(value==\"{\"){results={};for(;;hasMembers||(hasMembers=true)){value=lex();if(value==\"}\"){break}if(hasMembers){if(value==\",\"){value=lex();if(value==\"}\"){abort()}}else{abort()}}if(value==\",\"||typeof value!=\"string\"||(charIndexBuggy?value.charAt(0):value[0])!=\"@\"||lex()!=\":\"){abort()}results[value.slice(1)]=get(lex())}return results}abort()}return value};var update=function(source,property,callback){var element=walk(source,property,callback);if(element===undef){delete source[property]}else{source[property]=element}};var walk=function(source,property,callback){var value=source[property],length;if(typeof value==\"object\"&&value){if(getClass.call(value)==arrayClass){for(length=value.length;length--;){update(value,length,callback)}}else{forEach(value,function(property){update(value,property,callback)})}}return callback.call(source,property,value)};JSON3.parse=function(source,callback){var result,value;Index=0;Source=\"\"+source;result=get(lex());if(lex()!=\"$\"){abort()}Index=Source=null;return callback&&getClass.call(callback)==functionClass?walk((value={},value[\"\"]=result,value),\"\",callback):result}}}if(isLoader){define(function(){return JSON3})}})(this)},{}],50:[function(_dereq_,module,exports){module.exports=toArray;function toArray(list,index){var array=[];index=index||0;for(var i=index||0;i<list.length;i++){array[i-index]=list[i]}return array}},{}]},{},[1])(1)});","var done = false;\nvar images = [\n    '../../img/surf/bg.jpg'\n];\n\n$.preload(images, 1, function (last) {\n    if (!last) return;\n    if (done) show();\n    done = true;\n});\n\n$(\".wrapper\").preload(function () {\n    if (done) show();\n    done = true;\n});\n\nfunction show() {\n    $(\".loading\").hide();\n    $(\"body\").addClass(\"bg\");\n    $(\".wrapper\").show();\n    $('.character').sprite({fps: 3, no_of_frames: 6});\n}\n\n\nvar Vue = require('vue');\nVue.use(require('vue-resource'));\n\nvar socket = io('http://surf.local:3000');\nsocket.emit(\"join\");\n\n// socket.on(\"global:App\\\\Events\\\\SentGlobalMessage\", function(message){\n//     console.log(message.data);\n// });\n\nVue.http.headers.common['X-CSRF-TOKEN'] = $(\"#token\").attr(\"value\");\n\n\nnew Vue({\n    el: '#chat',\n\n    data: {\n        messages: [],\n        message: \"\"\n    },\n\n    methods: {\n        sendMessage: function() {\n\n            if(!this.message) return;\n\n            socket.emit(\"chat\", {c: \"global\", m: self.message});\n            self.message = \"\";\n        },\n\n        removeOldMessages: function() {\n            if(self.messages.length > 20) {\n                self.messages.shift();\n            }\n        }\n    },\n\n    ready: function() {\n        self = this;\n\n        socket.on('chat', function (data) {\n\n            messages = $(self.$$.messages);\n\n            scrolledToBottom = messages.scrollTop() + messages.innerHeight() >= messages.prop('scrollHeight');\n\n            self.messages.push({name: data.n, text: data.m});\n\n            if(scrolledToBottom) {\n                setTimeout(function() {\n                    messages.animate({ scrollTop: messages.prop('scrollHeight') - messages.innerHeight()}, 100, function() { self.removeOldMessages(); });\n                }, 10);\n            }\n        });\n\n        socket.emit(\"chat\", {c: \"global\", m: \"Hey dude how are you today?\"});\n    }\n});\n"],"sourceRoot":"/source/"}